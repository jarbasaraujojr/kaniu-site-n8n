{
    "name": "Kaniu Site Admin - Beta",
        "nodes": [
            {
                "parameters": {
                    "path": "kaniu-beta",
                    "responseMode": "responseNode",
                    "options": {}
                },
                "type": "n8n-nodes-base.webhook",
                "typeVersion": 2,
                "position": [
                    -880,
                    0
                ],
                "id": "b6ec4ec9-88c9-4cfd-8a83-8c062df707ad",
                "name": "Kaniu",
                "webhookId": "bc6c9313-2873-4537-96d8-3bb31cdff407"
            },
            {
                "parameters": {
                    "operation": "getAll",
                    "tableId": "_n8n_animais_dados",
                    "returnAll": true,
                    "matchType": "allFilters",
                    "filters": {
                        "conditions": [
                            {
                                "keyName": "canil",
                                "condition": "eq",
                                "keyValue": "1"
                            },
                            {
                                "keyName": "especie",
                                "condition": "like",
                                "keyValue": "={{ $('Kaniu').item.json.query?.especie || '*' }}"
                            },
                            {
                                "keyName": "sexo",
                                "condition": "like",
                                "keyValue": "={{ $('Kaniu').item.json.query?.sexo || '*' }}"
                            },
                            {
                                "keyName": "porte",
                                "condition": "like",
                                "keyValue": "={{ $('Kaniu').item.json.query?.porte || '*' }}"
                            },
                            {
                                "keyName": "faixa_etaria",
                                "condition": "like",
                                "keyValue": "={{ $('Kaniu').item.json.query?.idade || '*' }}"
                            },
                            {
                                "keyName": "status",
                                "condition": "like",
                                "keyValue": "={{ $('Kaniu').item.json.query?.status || $json.status.first() }}"
                            }
                        ]
                    }
                },
                "type": "n8n-nodes-base.supabase",
                "typeVersion": 1,
                "position": [
                    448,
                    -128
                ],
                "id": "5a5a5e01-216c-4cc0-82f6-380ef774db8e",
                "name": "Get Animals",
                "notesInFlow": true,
                "alwaysOutputData": true,
                "credentials": {
                    "supabaseApi": {
                        "id": "vfFMnH1cZndqgot0",
                        "name": "Viralatinhaz Supabase"
                    }
                }
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "269a87fc-9513-49ae-9721-d59ad4eb1902",
                                "leftValue": "={{ $('Kaniu').item.json.query.animal_id.isEmpty() }}",
                                "rightValue": "",
                                "operator": {
                                    "type": "boolean",
                                    "operation": "true",
                                    "singleValue": true
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -16,
                    0
                ],
                "id": "7c346132-0dd1-4915-9719-7a4714b41ae2",
                "name": "List Animals"
            },
            {
                "parameters": {
                    "operation": "get",
                    "tableId": "_n8n_animais_dados",
                    "filters": {
                        "conditions": [
                            {
                                "keyName": "animal_id",
                                "keyValue": "={{ \n  $('Kaniu').item.json.query?.animal_id\n}}"
                            }
                        ]
                    }
                },
                "type": "n8n-nodes-base.supabase",
                "typeVersion": 1,
                "position": [
                    448,
                    128
                ],
                "id": "2856fa1d-a6d7-4229-bb33-73df2036c53d",
                "name": "Get Details",
                "notesInFlow": true,
                "credentials": {
                    "supabaseApi": {
                        "id": "vfFMnH1cZndqgot0",
                        "name": "Viralatinhaz Supabase"
                    }
                }
            },
            {
                "parameters": {
                    "respondWith": "text",
                    "responseBody": "={{ $json.html }}",
                    "options": {}
                },
                "type": "n8n-nodes-base.respondToWebhook",
                "typeVersion": 1.2,
                "position": [
                    1600,
                    -16
                ],
                "id": "da1437b8-f89a-4c42-961e-5a77313b6f6b",
                "name": "Respond"
            },
            {
                "parameters": {
                    "sortFieldsUi": {
                        "sortField": [
                            {
                                "fieldName": "nome"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.sort",
                "typeVersion": 1,
                "position": [
                    880,
                    -32
                ],
                "id": "a7a72991-30a9-4896-a429-8f5c0d96a071",
                "name": "Sort",
                "alwaysOutputData": false
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "fbd341f6-d387-4a05-b02c-be40b9e12524",
                                "leftValue": "={{ $json }}",
                                "rightValue": 0,
                                "operator": {
                                    "type": "object",
                                    "operation": "empty",
                                    "singleValue": true
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    656,
                    -128
                ],
                "id": "e567b97a-bdaa-4de8-80cf-b9792e7a1d93",
                "name": "Empty"
            },
            {
                "parameters": {
                    "aggregate": "aggregateAllItemData",
                    "destinationFieldName": "animals",
                    "options": {}
                },
                "type": "n8n-nodes-base.aggregate",
                "typeVersion": 1,
                "position": [
                    1104,
                    -32
                ],
                "id": "bca4dd87-45f8-4fd7-9d93-a6f0d25797cb",
                "name": "Combine"
            },
            {
                "parameters": {
                    "jsCode": "const animals = $input.first().json.animals;\nconst img_logo = $('Constants').item.json.img_logo;\nconst fav_icon = $('Constants').item.json.fav_icon;\nconst dog_font= $('Constants').item.json.dog_font;\nconst webhook_url = $('Kaniu').first().json.webhookUrl;\n\nconst APPLIED_STATUS = ( $('Kaniu').item.json.query.status || 'Abrigado');\n\nconst getIcon = (key) => icones?.[0]?.[key]?.value ?? null;\n\nlet cardsHtml = '';\n\n// Fun├º├úo para remover acentos de uma string\nfunction normalizeAccents(str) {\n    if (!str) return '';\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\nif (animals && Array.isArray(animals) && animals.length > 0) {\n    cardsHtml = animals.map(animal => {\n        // Normaliza o nome do animal para remover acentos\n        const normalizedName = normalizeAccents(animal.nome);\n\n        // Exibe os dados, exceto album, canil e animal_id\n        return `\n            <a href=\"${webhook_url}?animal_id=${animal.animal_id}\" class=\"animal-list-link\">\n                <div class=\"animal-strip\">\n                    <div class=\"animal-photo-list-container\">\n                        <img class=\"animal-photo-list\" src=\"${animal.foto}\" alt=\"Foto de ${normalizedName}\"/>\n                    </div>\n                    <div class=\"list-content\">\n                        <h3>${normalizedName}</h3>\n                        <div class=\"characteristics-container\">\n                            <span class=\"characteristic-box\">${animal.especie}</span>\n                            <span class=\"characteristic-box\">${animal.sexo}</span>\n                            <span class=\"characteristic-box\">${animal.faixa_etaria}</span>\n                            <span class=\"characteristic-box\">${animal.porte}</span>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        `;\n    }).join('');\n} else {\n    cardsHtml = '<p class=\"text-red-500 text-center\">Nenhum animal encontrado para ado├º├úo no momento.</p>';\n}\n\nconst html = `\n    <!DOCTYPE html>\n    <html lang=\"pt-br\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          \n        <!-- Favicon padr├úo (├¡cone na aba do navegador) -->\n        <link rel=\"icon\" type=\"image/png\" href=\"${fav_icon}\">\n\n        <title>Animais para Ado├º├úo</title>\n        <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n            \n            @font-face {\n                font-family: 'GoodDog';\n                src: url('${dog_font}') format('truetype');\n                font-weight: normal;\n                font-style: normal;\n            }\n            \n            :root {\n                --primary-color: #5A5D7F;\n                --secondary-color: #ff6600;\n                --background-light: #F4F6F9;\n                --card-background: #FFFFFF;\n                --text-dark: #333333;\n                --text-light: #666666;\n            }\n\n            body {\n                font-family: 'Poppins', sans-serif;\n                margin: 0;\n                padding-top: 120px; /* 60px header + 60px filtro */\n                background-color: var(--background-light);\n                color: var(--text-dark);\n            }\n            \n            .header {\n                width: 100%;\n                height: 60px; /* define altura fixa */\n                padding: 10px 20px;\n                background-color: var(--card-background);\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05); /* sombra mais suave */\n                display: flex;\n                align-items: center;\n                box-sizing: border-box;\n                flex-shrink: 0;\n            \n                position: fixed;\n                top: 0;\n                left: 0;\n                z-index: 1000;\n            }\n            \n            .header-content {\n                display: flex;\n                align-items: center;\n                gap: 10px;\n                width: 100%;\n            }\n            \n            .header-logo {\n                height: 32px;\n                //width: 40px;\n            }\n            \n            .header-title {\n                font-family: 'GoodDog', sans-serif;\n                font-size: 1.8rem;\n                color: var(--primary-color);\n                margin: 0;\n            }\n            \n            .filter-container {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 10px;\n                align-items: center;\n            }\n            \n            .status-filter-btn {\n                cursor: pointer;\n                background-color: #f0f2f5;\n                color: var(--text-dark);\n                padding: 8px 16px;\n                border-radius: 8px;\n                font-size: 0.9rem;\n                font-weight: 500;\n                border: none;\n                transition: background-color 0.2s ease, color 0.2s ease;\n            }\n            \n            .status-filter-btn:hover {\n                background-color: #e2e4e7;\n            }\n            \n            .status-filter-btn.active {\n                background-color: var(--primary-color);\n                color: #FFFFFF;\n            }\n            \n            .filter-container {\n                position: fixed;\n                top: 60px; /* exatamente igual ├á altura do header */\n                left: 0;\n                width: 100%;\n                background-color: var(--background-light); /* mesma cor do fundo */\n                display: flex;\n                flex-wrap: wrap;\n                justify-content: center;\n                align-items: center;\n                gap: 5px;\n                padding: 10px;\n                z-index: 999;\n                box-shadow: none; /* nenhuma sombra separando */\n                margin: 0;\n                border-top: none;\n            }\n            \n            .status-filter-btn {\n                cursor: pointer;\n                background-color: #f0f2f5;\n                color: var(--text-dark);\n                padding: 8px 16px; /* Aumentei o padding */\n                border-radius: 8px;\n                font-size: 0.9rem; /* Aumentei a fonte */\n                font-weight: 500;\n                border: none;\n                transition: background-color 0.2s ease, color 0.2s ease;\n            }\n            .status-filter-btn:hover {\n                background-color: #e2e4e7;\n            }\n            .status-filter-btn.active {\n                background-color: var(--primary-color);\n                color: #FFFFFF;\n            }\n            .main-container {\n              max-width: 1400px;\n              width: 95%;\n              margin: 0 auto 50px; /* antes era 0 auto */\n              padding: 10px;\n            }\n            .list-container {\n              display: grid;\n                display: grid;\n                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* ajusta responsivo */\n                justify-content: center; /* centraliza os itens */\n                gap: 10px; /* espa├ºamento entre os itens */\n            }\n            .animal-list-link {\n                text-decoration: none;\n                color: inherit;\n                display: block;\n                max-width: 400px; /* limite de largura */\n                width: 100%;\n                margin: 0 auto; /* centraliza dentro da coluna */\n            }\n            .animal-strip {\n                background-color: #fff;\n                border-radius: 10px;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n                display: flex;\n                align-items: flex-start;\n                overflow: hidden;\n                transition: transform 0.2s ease, box-shadow 0.2s ease;\n            }\n            .animal-strip:hover {\n                transform: translateY(-3px);\n                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);\n            }\n            .animal-photo-list-container {\n                width: 100px;\n                height: 100px;\n                flex-shrink: 0;\n                padding: 10px; /* margem interna entre borda e foto */\n                box-sizing: border-box; /* garante que continue com 100x100 */\n            }\n            .animal-photo-list {\n                width: 100%;\n                height: 100%;\n                object-fit: cover;\n                border-radius: 8px; /* opcional, se quiser deixar arredondado */\n            }\n            .list-content {\n                padding: 15px 10px;\n                flex-grow: 1;\n            }\n            .list-content h3 {\n                margin: 0 0 10px;\n                font-family: 'GoodDog', sans-serif;\n                font-size: 1.5rem;\n                font-weight: 600;\n                color: var(--primary-color);\n            }\n            .characteristics-container {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 8px;\n            }\n            .characteristic-box {\n                background-color: var(--background-light);\n                color: var(--text-light);\n                padding: 4px 10px;\n                border-radius: 6px;\n                font-size: 0.8rem;\n                font-weight: 500;\n                white-space: nowrap;\n            }\n        </style>\n    </head>\n    <body>\n        <div class=\"header\">\n            <div class=\"header-content\" style=\"justify-content: space-between; width: 100%;\">\n                <div style=\"display: flex; align-items: center; gap: 10px;\">\n                    <img class=\"header-logo\" src=\"${img_logo}\" alt=\"Logo Kaniu\"/>\n                </div>\n            </div>\n        </div>\n        <div class=\"filter-container\">\n          <button class=\"status-filter-btn ${APPLIED_STATUS === 'Abrigado' ? 'active' : ''}\" data-status=\"Abrigado\">Abrigados</button>\n          <button class=\"status-filter-btn ${APPLIED_STATUS === 'Adotado' ? 'active' : ''}\" data-status=\"Adotado\">Adotados</button>\n          <button class=\"status-filter-btn ${APPLIED_STATUS === 'Internado' ? 'active' : ''}\" data-status=\"Internado\">Internados</button>\n          <button class=\"status-filter-btn ${APPLIED_STATUS === 'Desaparecido' ? 'active' : ''}\" data-status=\"Desaparecido\">Desaparecidos</button>\n          <button class=\"status-filter-btn ${APPLIED_STATUS === 'Falecido' ? 'active' : ''}\" data-status=\"Falecido\">Falecidos</button>\n        </div>\n        <div class=\"main-container\">\n            <div class=\"list-container\">\n                ${cardsHtml}\n            </div>\n        </div>\n\n        <script>\n          (function () {\n            const ENDPOINT_URL = ${JSON.stringify(webhook_url)};\n            const DEFAULT_STATUS = 'Abrigado';\n            // Valor decidido no servidor (sem depender da URL)\n            const CURRENT_STATUS = ${JSON.stringify(APPLIED_STATUS)};\n        \n            // Atualiza classe ativa (seguran├ºa extra caso futuramente re-renderize via JS)\n            const statusButtons = document.querySelectorAll('.status-filter-btn');\n            function updateButtonStatus() {\n              statusButtons.forEach(btn => {\n                const isActive = btn.getAttribute('data-status') === CURRENT_STATUS;\n                btn.classList.toggle('active', isActive);\n              });\n            }\n            updateButtonStatus();\n        \n            // Clique nos bot├Áes ÔåÆ navega com ?status=... (sem redirecionar no primeiro load)\n            statusButtons.forEach(button => {\n              button.addEventListener('click', () => {\n                const statusToFilter = button.getAttribute('data-status');\n                const nextStatus = (statusToFilter === CURRENT_STATUS) ? DEFAULT_STATUS : statusToFilter;\n                const newUrl = ENDPOINT_URL+'?status='+encodeURIComponent(nextStatus);\n                window.location.href = newUrl;\n              });\n            });\n          })();\n        </script>\n\n    </body>\n    </html>\n`;\n\nreturn [{ json: { html: html } }];"
                },
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                    1344,
                    -144
                ],
                "id": "2345bc22-c796-4852-bd6b-b5864f6a3c7e",
                "name": "Animals List Page"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "fadb7979-539b-42f0-882d-dec4507354b3",
                                "name": "status",
                                "value": "={{ \n  [ \n    'Abrigado', \n    'Adotado', \n    'Internado', \n    'Desaparecido', \n    'Falecido'\n  ] \n}}",
                                "type": "array"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    240,
                    -128
                ],
                "id": "4fbfe606-5d03-4fe6-99ad-255b5e700ffa",
                "name": "Animal Statuses"
            },
            {
                "parameters": {
                    "workflowId": {
                        "__rl": true,
                        "value": "95nGT6iUl9eJEgUA",
                        "mode": "list",
                        "cachedResultUrl": "/workflow/95nGT6iUl9eJEgUA",
                        "cachedResultName": "Kaniu Data Tables"
                    },
                    "workflowInputs": {
                        "mappingMode": "defineBelow",
                        "value": {}
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.executeWorkflow",
                "typeVersion": 1.2,
                "position": [
                    240,
                    128
                ],
                "id": "3349590c-5f1c-42ae-9345-00c716a1cff0",
                "name": "Tables"
            },
            {
                "parameters": {
                    "jsCode": "/**********************************************\n/* Kaniu\n/* Sistema de gest├úo de abrigos de animais\n/* P├ígina do animal\n/**********************************************/\n\n// Vari├íveis de trabalho\nconst animal = $(\u0027Get Details\u0027).first().json;\nconst especies = JSON.stringify($(\u0027Tables\u0027).first().json.especies);\nconst racas = JSON.stringify($(\u0027Tables\u0027).first().json.racas);\nconst generos = JSON.stringify($(\u0027Tables\u0027).first().json.generos);\nconst portes = JSON.stringify($(\u0027Tables\u0027).first().json.portes);\nconst cores = JSON.stringify($(\u0027Tables\u0027).first().json.cores);\nconst pelagens = JSON.stringify($(\u0027Tables\u0027).first().json.pelagens);\nconst icones = $(\u0027Icons\u0027).first().json;\n\nconst app_url = $(\u0027Kaniu\u0027).first().json.webhookUrl.split(\u0027webhook/\u0027)[1];\nconst img_logo = $(\u0027Constants\u0027).item.json.img_logo;\n\n// C├│dogo para obter o arquivo de estilo\nconst estilo = $(\u0027Estilo\u0027).first().json;\n\n// Fun├º├úo para converter boolean para \"Sim\" ou \"N├úo\"\nconst formatBoolean = (value) =\u003e value ? \u0027Sim\u0027 : \u0027N├úo\u0027;\n\n// Fun├º├úo para checar por valores nulos ou 0\nconst formatValue = (value) =\u003e value === null || value === 0 || value === undefined ? \u0027\u0027 : value;\n\n// Fun├º├úo para calcular idade completa em anos, meses e dias\nconst calculateAge = (birthDate) =\u003e {\n    const today = new Date();\n    const dob = new Date(birthDate);\n\n    let years = today.getFullYear() - dob.getFullYear();\n    let months = today.getMonth() - dob.getMonth();\n    let days = today.getDate() - dob.getDate();\n\n    if (days \u003c 0) {\n        months--;\n        const prevMonth = new Date(today.getFullYear(), today.getMonth(), 0);\n        days = today.getDate() + (prevMonth.getDate() - dob.getDate());\n    }\n\n    if (months \u003c 0) {\n        years--;\n        months = 12 + months;\n    }\n\n    let txt_anos = years == 0 ? \u0027\u0027 : years == 1 ? \u00271 ano\u0027 : years + \u0027 anos\u0027;\n    let txt_meses = months == 0 ? \u0027\u0027 : months == 1 ? \u00271 m├¬s\u0027 : months + \u0027 meses\u0027;\n    let txt_e = (txt_anos == \u0027\u0027 || txt_meses == \u0027\u0027) ? \u0027\u0027 : \u0027 e \u0027;\n\n    return txt_anos+txt_e+txt_meses;\n};\n\n// Calcula a idade do animal\nconst ageString = calculateAge(animal.nascimento);\n\n// Fun├º├úo para retornar um ├¡cone\nfunction getIcon(icon_name) {\n    const iconValue = icones[icon_name].value;\n\n    if (!iconValue) {\n        return \u0027\u003ci class=\"fa-solid fa-notdef\"\u003e\u003c/i\u003e\u0027; // error icon\n    }\n\n    return \u0027\u003ci class=\"fa-solid fa-\u0027 + iconValue + \u0027\"\u003e\u003c/i\u003e\u0027;\n}\n\n//return {\"icone\": getIcon(\u0027vacina\u0027)};\n\n// Fun├º├úo para gerar o HTML dos ├¡cones com base nas propriedades do animal\nfunction animalStatusIcons(animal) {\n    let iconsHtml = \u0027\u0027;\n\n    // Verifica se o animal est├í castrado e adiciona o ├¡cone se for verdade\n    if (animal.castrado) {\n        iconsHtml += \u0027\u003cdiv class=\"img-button-wrapper\"\u003e\u003ci class=\"fa-solid fa-scissors\"\u003e\u003c/i\u003e\u003cspan class=\"tooltip\"\u003eCastrado\u003c/span\u003e\u003c/div\u003e\u0027;\n    }\n\n    // Verifica se o animal est├í vacinado\n    if (animal.vacinado) {\n        iconsHtml += \u0027\u003cdiv class=\"img-button-wrapper\"\u003e\u003ci class=\"fa-solid fa-syringe\"\u003e\u003c/i\u003e\u003cspan class=\"tooltip\"\u003eVacinado\u003c/span\u003e\u003c/div\u003e\u0027;\n    }\n\n    // Verifica se o animal est├í vermifugado\n    if (animal.vermifugado) {\n        iconsHtml += \u0027\u003cdiv class=\"img-button-wrapper\"\u003e\u003ci class=\"fa-solid fa-pills\"\u003e\u003c/i\u003e\u003cspan class=\"tooltip\"\u003eVermifugado\u003c/span\u003e\u003c/div\u003e\u0027;\n    }\n\n    // Verifica se o animal est├í desparasitado\n    if (animal.desparasitado) {\n        iconsHtml += \u0027\u003cdiv class=\"img-button-wrapper\"\u003e\u003ci class=\"fa-solid fa-bug-slash\"\u003e\u003c/i\u003e\u003cspan class=\"tooltip\"\u003eDesparasitado\u003c/span\u003e\u003c/div\u003e\u0027;\n    }\n\n    return iconsHtml;\n}\n\n// Gera o html dos ├¡cones indicando o status do animall\nconst iconesAnimal = animalStatusIcons(animal);\n\n// =========================================================================\n// O C├ôDIGO DO N8N TERMINA AQUI. A PARTIR DAQUI VEM O HTML E O JAVASCRIPT\n// QUE SER├âO EXECUTADOS NO NAVEGADOR.\n// =========================================================================\n\n// Gera o html principal da p├ígina\nconst html = `\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"pt-br\"\u003e\n\n${estilo.style}\n\n\u003cscript src=\"https://cdn.jsdelivr.net/npm/chart.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns\"\u003e\u003c/script\u003e\n\u003cscript src=\"https://kit.fontawesome.com/78b7eb0968.js\" crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n\n\u003cscript\u003e\n    const cachedData = {};\n    \n    // =========================================================================\n    // FUN├ç├òES DE L├ôGICA DO POP-UP DE PESAGEM (AS FUN├ç├òES DE ABRIR E CLIQUE FORAM REMOVIDAS/SIMPLIFICADAS)\n    // =========================================================================\n\n    // Fun├º├úo de tratamento do clique na linha da tabela.\n    // ├ë esperado que a linha tenha o atributo data-record com o JSON do item.\n    function handlePesagemClick(rowElement) {\n        // 1. Obt├®m a string JSON com as entidades \u0026quot;\n        const itemDataString = rowElement.getAttribute(\u0027data-record\u0027);\n        \n        // 2. Substitui as entidades \u0026quot; pelas aspas duplas reais (\")\n        const safeJsonString = itemDataString.replace(/\u0026quot;/g, \u0027\"\u0027);\n        \n        // 3. Faz o parse da string JSON para um objeto\n        const record = JSON.parse(safeJsonString);\n        \n        // 4. Abre o pop-up com o registro\n        openPesagemPopup(record);\n    }\n\n    // Fun├º├úo para fechar o pop-up da pesagem\n    function closePesagemPopup() {\n        document.getElementById(\u0027overlay\u0027).style.display = \u0027none\u0027;\n        document.getElementById(\u0027pop-up-pesagem\u0027).style.display = \u0027none\u0027;\n        // Limpa a mensagem de erro\n        const errorElement = document.getElementById(\u0027pop-up-pesagem\u0027).querySelector(\u0027.error-message-pesagem\u0027);\n        if (errorElement) {\n            errorElement.remove();\n        }\n    }\n\n    // Fun├º├úo para abrir o popup de pesagem (novo ou editar)\n    function openPesagemPopup(record = null) {\n        if (record) {\n            // Edi├º├úo\n            document.getElementById(\u0027pesagem-id\u0027).value = record.id;\n            document.getElementById(\u0027pesagem-data-input\u0027).value = record.data;\n            document.getElementById(\u0027pesagem-peso-input\u0027).value = record.peso;\n        } else {\n          // Novo registro\n          document.getElementById(\u0027pesagem-id\u0027).value = \"\";\n          const today = new Date().toISOString().split(\u0027T\u0027)[0]; // pega AAAA-MM-DD\n          document.getElementById(\u0027pesagem-data-input\u0027).value = today;\n          document.getElementById(\u0027pesagem-peso-input\u0027).value = \"\";\n        }\n    \n        document.getElementById(\u0027overlay\u0027).style.display = \u0027block\u0027;\n        document.getElementById(\u0027pop-up-pesagem\u0027).style.display = \u0027flex\u0027;\n    }\n    \n    // Fun├º├úo para salvar (update ou insert)\n    async function updatePesagemRecord() {\n        const id = document.getElementById(\u0027pesagem-id\u0027).value;\n        const data = document.getElementById(\u0027pesagem-data-input\u0027).value;\n        const peso = document.getElementById(\u0027pesagem-peso-input\u0027).value;\n    \n        const popup = document.getElementById(\u0027pop-up-pesagem\u0027);\n        const popupActions = popup.querySelector(\u0027.pop-up-actions\u0027);\n    \n        if (!data || !peso || isNaN(parseFloat(peso))) {\n            const errorElement = popup.querySelector(\u0027.error-message-pesagem\u0027);\n            if (errorElement) errorElement.remove();\n            popupActions.insertAdjacentHTML(\n                \u0027beforebegin\u0027,\n                \u0027\u003cp class=\"error-message-pesagem\" style=\"color:var(--primary-color); font-size: 0.8rem; text-align:center; margin-bottom: 5px;\"\u003ePreencha todos os campos corretamente.\u003c/p\u003e\u0027\n            );\n            return;\n        }\n    \n        try {\n            let payload = {\n                animal_id: \u0027${animal.animal_id}\u0027,\n                data: data,\n                peso: parseFloat(peso)\n            };\n    \n            let url = \"\";\n            if (id) {\n                // atualiza├º├úo\n                payload.tipo_registro = \"pesagem\";\n                payload.id_registro = id;\n                url = \"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\";\n            } else {\n                // inclus├úo\n                url = \"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu-add-pesagem\";\n            }\n    \n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(payload)\n            });\n    \n            if (!response.ok) {\n                throw new Error(\"Falha ao salvar o registro de pesagem.\");\n            }\n    \n            showAlert(id ? \"Pesagem atualizada com sucesso!\" : \"Pesagem inclu├¡da com sucesso!\", \"success\", 2000);\n    \n            cachedData[\u0027pesagens\u0027] = null;\n            await fetchTabData(\u0027pesagens\u0027);\n    \n        } catch (error) {\n            showAlert(\"Erro ao salvar a pesagem: \" + error.message, \"error\", 3000);\n        } finally {\n            closePesagemPopup();\n        }\n    }\n\n    // =========================================================================\n    // FUNCOES DO POP-UP DE TRATAMENTO\n    // =========================================================================\n\n    function clearTratamentoErrors() {\n        const popup = document.getElementById(\u0027pop-up-tratamento\u0027);\n        if (!popup) {\n            return;\n        }\n        const errorElement = popup.querySelector(\u0027.error-message-tratamento\u0027);\n        if (errorElement) {\n            errorElement.remove();\n        }\n    }\n\n    function closeTratamentoPopup() {\n        document.getElementById(\u0027overlay\u0027).style.display = \u0027none\u0027;\n        document.getElementById(\u0027pop-up-tratamento\u0027).style.display = \u0027none\u0027;\n        clearTratamentoErrors();\n    }\n\n    function openTratamentoPopup(record = null) {\n        const popup = document.getElementById(\u0027pop-up-tratamento\u0027);\n        const overlay = document.getElementById(\u0027overlay\u0027);\n        if (!popup || !overlay) {\n            return;\n        }\n\n        const popupTitle = popup.querySelector(\u0027h2\u0027);\n        const idInput = document.getElementById(\u0027tratamento-id\u0027);\n        const dataInput = document.getElementById(\u0027tratamento-data-input\u0027);\n        const vetInput = document.getElementById(\u0027tratamento-veterinario-input\u0027);\n        const descricaoInput = document.getElementById(\u0027tratamento-descricao-input\u0027);\n        const medicamentosInput = document.getElementById(\u0027tratamento-medicamentos-input\u0027);\n        const finalizadaInput = document.getElementById(\u0027tratamento-finalizada-input\u0027);\n\n        if (record) {\n            idInput.value = record.id || \u0027\u0027;\n            dataInput.value = record.data || new Date().toISOString().split(\u0027T\u0027)[0];\n            vetInput.value = record.veterinario_nome || \u0027\u0027;\n            descricaoInput.value = record.descricao || \u0027\u0027;\n            if (Array.isArray(record.medicamentos)) {\n                medicamentosInput.value = record.medicamentos.join(\u0027\\n\u0027);\n            } else {\n                medicamentosInput.value = record.medicamentos || \u0027\u0027;\n            }\n            finalizadaInput.value = record.finalizada ? \u0027true\u0027 : \u0027false\u0027;\n            if (popupTitle) {\n                popupTitle.textContent = \u0027Editar Tratamento\u0027;\n            }\n        } else {\n            idInput.value = \u0027\u0027;\n            const today = new Date().toISOString().split(\u0027T\u0027)[0];\n            dataInput.value = today;\n            vetInput.value = \u0027\u0027;\n            descricaoInput.value = \u0027\u0027;\n            medicamentosInput.value = \u0027\u0027;\n            finalizadaInput.value = \u0027false\u0027;\n            if (popupTitle) {\n                popupTitle.textContent = \u0027Novo Tratamento\u0027;\n            }\n        }\n\n        clearTratamentoErrors();\n        overlay.style.display = \u0027block\u0027;\n        popup.style.display = \u0027flex\u0027;\n    }\n\n    async function submitTratamentoForm() {\n        const popup = document.getElementById(\u0027pop-up-tratamento\u0027);\n        if (!popup) {\n            return;\n        }\n\n        const id = document.getElementById(\u0027tratamento-id\u0027).value;\n        const data = document.getElementById(\u0027tratamento-data-input\u0027).value;\n        const veterinario = document.getElementById(\u0027tratamento-veterinario-input\u0027).value.trim();\n        const descricao = document.getElementById(\u0027tratamento-descricao-input\u0027).value.trim();\n        const medicamentosRaw = document.getElementById(\u0027tratamento-medicamentos-input\u0027).value;\n        const finalizada = document.getElementById(\u0027tratamento-finalizada-input\u0027).value === \u0027true\u0027;\n\n        const popupActions = popup.querySelector(\u0027.pop-up-actions\u0027);\n\n        clearTratamentoErrors();\n\n        if (!data || !descricao) {\n            if (popupActions) {\n                popupActions.insertAdjacentHTML(\n                    \u0027beforebegin\u0027,\n                    \u0027\u003cp class=\"error-message-tratamento\" style=\"color:var(--primary-color); font-size: 0.8rem; text-align:center; margin-bottom: 5px;\"\u003eInforme pelo menos a data e a descricao.\u003c/p\u003e\u0027\n                );\n            }\n            return;\n        }\n\n        const medicamentos = medicamentosRaw\n            .split(\u0027\\n\u0027)\n            .map(item =\u003e item.trim())\n            .filter(item =\u003e item.length \u003e 0);\n\n        const payload = {\n            animal_id: \u0027${animal.animal_id}\u0027,\n            data: data,\n            descricao: descricao,\n            finalizada: finalizada,\n            medicamentos: medicamentos\n        };\n\n        if (veterinario) {\n            payload.veterinario_nome = veterinario;\n        }\n\n        let url = \u0027\u0027;\n        if (id) {\n            payload.id_registro = id;\n            payload.tipo_registro = \u0027tratamento\u0027;\n            url = \u0027https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\u0027;\n        } else {\n            url = \u0027https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu-add-tratamento\u0027;\n        }\n\n        try {\n            const response = await fetch(url, {\n                method: \u0027POST\u0027,\n                headers: { \u0027Content-Type\u0027: \u0027application/json\u0027 },\n                body: JSON.stringify(payload)\n            });\n\n            if (!response.ok) {\n                throw new Error(\u0027Falha ao salvar o tratamento.\u0027);\n            }\n\n            showAlert(id ? \u0027Tratamento atualizado com sucesso!\u0027 : \u0027Tratamento incluido com sucesso!\u0027, \u0027success\u0027, 2000);\n            cachedData[\u0027tratamentos\u0027] = null;\n            await fetchTabData(\u0027tratamentos\u0027);\n            closeTratamentoPopup();\n        } catch (error) {\n            if (popupActions) {\n                popupActions.insertAdjacentHTML(\n                    \u0027beforebegin\u0027,\n                    \u0027\u003cp class=\"error-message-tratamento\" style=\"color:var(--primary-color); font-size: 0.8rem; text-align:center; margin-bottom: 5px;\"\u003e\u0027 + error.message + \u0027\u003c/p\u003e\u0027\n                );\n            }\n        }\n    }\n\n    \n    // =========================================================================\n\n    async function fetchTabData(tabId) {\n        if (cachedData[tabId]) {\n            return;\n        }\n\n        const tabContentElement = document.getElementById(\u0027tab-\u0027 + tabId);\n        //tabContentElement.innerHTML = \u0027\u003cdiv class=\"loading-message\"\u003eCarregando...\u003c/div\u003e\u0027; //teste\n\n        try {\n            const payload = {\n                tab_name: tabId,\n                animal_id: \u0027${animal.animal_id}\u0027\n            };\n\n            const response = await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu-animal-dados\", {\n                method: \u0027POST\u0027,\n                headers: {\n                    \u0027Content-Type\u0027: \u0027application/json\u0027\n                },\n                body: JSON.stringify(payload)\n            });\n\n            if (!response.ok) {\n                throw new Error(\u0027Erro na resposta da rede: \u0027 + response.statusText);\n            }\n\n            const data = await response.json();\n\n            // Trata a resposta do endpoint que agora retorna JSON com \u0027items\u0027 ou \u0027error\u0027\n            if (data.error) {\n                tabContentElement.innerHTML = \u0027\u003cdiv class=\"no-data-message\"\u003e\u0027 + data.error + \u0027\u003c/div\u003e\u0027;\n\n            } else if (tabId !== \u0027resumo\u0027 \u0026\u0026 (data.items.length == 0 || data.items[0].id == null)) {\n                tabContentElement.innerHTML = \u0027\u003cdiv class=\"no-data-message\"\u003eNenhum item encontrado.\u003c/div\u003e\u0027;\n\n            } else if (data.items) {\n\n                // Mapeamento de chaves para t├¡tulos de coluna amig├íveis\n                const columnMappings = {\n                    \u0027eventos\u0027: {\n                        \u0027data\u0027: \u0027Data\u0027,\n                        \u0027tipo\u0027: \u0027Tipo\u0027,\n                        \u0027descricao\u0027: \u0027Descri├º├úo\u0027,\n                        \u0027veterinario_nome\u0027: \u0027Veterin├írio\u0027\n                    },\n                    \u0027pesagens\u0027: {\n                        \u0027data\u0027: \u0027Data\u0027,\n                        \u0027peso\u0027: \u0027Medi├º├úo\u0027,\n                        \u0027variacao\u0027: \u0027Varia├º├úo\u0027\n                    },\n                    \u0027avaliacoes\u0027: {\n                        \u0027data\u0027: \u0027Data\u0027,\n                        \u0027observacao\u0027: \u0027Observa├º├úo\u0027,\n                        \u0027veterinario_nome\u0027: \u0027Veterin├írio\u0027,\n                        \u0027temperatura\u0027: \u0027Temp.\u0027,\n                        \u0027score\u0027: \u0027Score\u0027,\n                        \u0027peso\u0027: \u0027Peso\u0027,\n                        \u0027nota\u0027: \u0027Nota\u0027\n                    },\n                    \u0027imunizacoes\u0027: {\n                        \u0027data_exibicao\u0027: \u0027Data\u0027,\n                        \u0027tipo\u0027: \u0027Tipo\u0027,\n                        \u0027nome_imunizante\u0027: \u0027Imunizante\u0027,\n                        \u0027veterinario_nome\u0027: \u0027Veterin├írio\u0027,\n                        \u0027aplicada\u0027: \u0027Aplicada\u0027\n                    },\n                    \u0027tratamentos\u0027: {\n                        \u0027data\u0027: \u0027Data\u0027,\n                        \u0027veterinario_nome\u0027: \u0027Veterin├írio\u0027,\n                        \u0027medicamentos\u0027: \u0027Medicamentos\u0027,\n                        \u0027finalizada\u0027: \u0027Finalizado\u0027\n                    },\n                    \u0027arquivos\u0027: {\n                        \u0027data\u0027: \u0027Data\u0027,\n                        \u0027nome\u0027: \u0027Nome\u0027,\n                        \u0027observacao\u0027: \u0027Observa├º├úo\u0027,\n                        \u0027url\u0027: \u0027Visualizar\u0027\n                    }\n                };\n\n                const excludedKeys = [\u0027id\u0027, \u0027animal_id\u0027, \u0027veterinario_id\u0027, \u0027concluido\u0027, \u0027programado\u0027, \u0027atrasado\u0027];\n\n                // Fun├º├úo para renderizar a tabela\n                const renderTable = (items, tabId) =\u003e {\n                    const currentMapping = columnMappings[tabId] || {};\n                    const headers = Object.keys(items[0]).filter(key =\u003e !excludedKeys.includes(key));\n\n                    let tableHTML = \u0027\u003ctable class=\"tab-table\"\u003e\u003cthead\u003e\u003ctr\u003e\u0027;\n\n                    headers.forEach(header =\u003e {\n                        const title = currentMapping[header] || header.charAt(0).toUpperCase() + header.slice(1);\n                        tableHTML += \u0027\u003cth\u003e\u0027 + title + \u0027\u003c/th\u003e\u0027;\n                    });\n\n                    tableHTML += \u0027\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u0027;\n\n                    items.forEach(item =\u003e {\n                        let rowAttributes = \u0027\u0027;\n                        // MODIFICADO: Torna a linha clic├ível na aba de pesagens\n                        if (tabId === \u0027pesagens\u0027) {\n                            const safeJson = JSON.stringify(item).replace(/\"/g, \u0027\u0026quot;\u0027);\n                            rowAttributes = \u0027data-record=\"\u0027+safeJson+\u0027\" onclick=\"handlePesagemClick(this)\" style=\"cursor:pointer;\"\u0027;\n                        }\n                        tableHTML += \u0027\u003ctr \u0027+rowAttributes+\u0027\u003e\u0027;\n                        headers.forEach(header =\u003e {\n                            let formattedContent = \u0027\u0027;\n                            const cellContent = item[header];\n\n                            if ([\u0027data\u0027, \u0027data_exibicao\u0027].includes(header) \u0026\u0026 cellContent) {\n                                const [year, month, day] = cellContent.split(\u0027-\u0027);\n                                formattedContent = day + \u0027/\u0027 + month + \u0027/\u0027 + year;\n                            } else if (header === \u0027peso\u0027 \u0026\u0026 cellContent !== null) {\n                                formattedContent = cellContent + \u0027 kg\u0027;\n                            } else if (header === \u0027medicamentos\u0027 \u0026\u0026 Array.isArray(cellContent)) {\n                                formattedContent = \u0027\u003cul\u003e\u0027 + cellContent.map(med =\u003e \u0027\u003cli\u003e\u0027 + med + \u0027\u003c/li\u003e\u0027).join(\u0027\u0027) + \u0027\u003c/ul\u003e\u0027;\n                            } else if (header === \u0027url\u0027 \u0026\u0026 cellContent) {\n                                formattedContent = \u0027\u003ca href=\"\u0027 + cellContent + \u0027\" target=\"_blank\"\u003eVisualizar\u003c/a\u003e\u0027;\n                            } else if (typeof cellContent === \u0027boolean\u0027) {\n                                formattedContent = cellContent ? \u0027Sim\u0027 : \u0027N├úo\u0027;\n                            } else {\n                                formattedContent = cellContent || \u0027\u0027;\n                            }\n                            tableHTML += \u0027\u003ctd\u003e\u0027 + formattedContent + \u0027\u003c/td\u003e\u0027;\n                        });\n                        tableHTML += \u0027\u003c/tr\u003e\u0027;\n                    });\n\n                    tableHTML += \u0027\u003c/tbody\u003e\u003c/table\u003e\u0027;\n                    return tableHTML;\n                };\n\n                if (tabId == \u0027resumo\u0027) {\n                    renderizarResumo(data.items);\n                } else {\n                    // bot├úo fixo no topo direito (exceto resumo)\n                    const ap = \"\u0027\";\n                    const newButtonHTML = \u0027\u003cdiv class=\"new-button-fixed\"\u003e\u003cbutton class=\"action-button\" onclick=\"handleNewRecord(\u0027+ap+tabId+ap+\u0027)\"\u003eNovo\u003c/button\u003e\u003c/div\u003e\u0027;\n                \n                    tabContentElement.innerHTML = newButtonHTML + renderTable(data.items, tabId);\n                }\n\n                // Se for a guia de pesagens, renderiza o gr├ífico\n                if (tabId === \u0027pesagens\u0027 \u0026\u0026 data.chartData) {\n                    tabContentElement.innerHTML += \u0027\u003cdiv class=\"chart-container\"\u003e\u003ccanvas id=\"weightChart\"\u003e\u003c/canvas\u003e\u003c/div\u003e\u0027;\n                    renderChart(data.chartData);\n                }\n\n                cachedData[tabId] = true;\n            }\n\n        } catch (error) {\n            tabContentElement.innerHTML = \u0027\u003cdiv class=\"error-message\"\u003eOcorreu um erro ao carregar os dados.\u003c/div\u003e\u0027;\n        }\n\n    }\n\n    function renderChart(chartData) {\n        // Converte dados do backend em pontos {x,y}\n        const dataPoints = chartData.map(item =\u003e ({\n            x: new Date(item.data),\n            y: item.peso\n        }));\n\n        const maxWeight = Math.max(...dataPoints.map(p =\u003e p.y));\n        const maxYValue = Math.ceil(maxWeight / 10) * 10;\n\n        const ctx = document.getElementById(\u0027weightChart\u0027).getContext(\u00272d\u0027);\n\n        // pega primeira e ├║ltima data reais do dataset\n        const dates = chartData.map(item =\u003e new Date(item.data));\n        const minDate = new Date(Math.min(...dates));\n        const today = new Date();\n\n        // adiciona margem de 15 dias antes da primeira data\n        const paddedMinDate = new Date(minDate);\n        paddedMinDate.setDate(minDate.getDate() - 15);\n\n        new Chart(ctx, {\n            type: \u0027line\u0027,\n            data: {\n                datasets: [{\n                    label: \u0027Peso\u0027,\n                    data: dataPoints,\n                    borderColor: \u0027#4A90E2\u0027,\n                    backgroundColor: \u0027rgba(74, 144, 226, 0.2)\u0027,\n                    fill: true,\n                    tension: 0.3,\n                    pointRadius: 3\n                }]\n            },\n            options: {\n                responsive: true,\n                scales: {\n                    x: {\n                        type: \u0027time\u0027,\n                        time: {\n                            unit: \u0027month\u0027,\n                            displayFormats: {\n                                month: \u0027MMM yy\u0027 // Exibe Jan 23, Fev 23, etc.\n                            }\n                        },\n                        ticks: {\n                            callback: function(value, index, ticks) {\n                                const date = new Date(value);\n                                // Verifica se ├® o primeiro m├¬s do ano (Janeiro, que ├® o m├¬s 0)\n                                if (date.getMonth() === 0) {\n                                    return date.getFullYear(); // Exibe o ano completo\n                                } else {\n                                    // Retorna a primeira letra do m├¬s\n                                    const month = date.toLocaleString(\u0027pt-BR\u0027, {\n                                        month: \u0027short\u0027\n                                    });\n                                    return month.charAt(0).toUpperCase();\n                                }\n                            },\n                            autoSkip: true,\n                            maxRotation: 0,\n                            minRotation: 0\n                        },\n                        min: paddedMinDate,\n                        max: today,\n                        grid: {\n                            drawTicks: true\n                        }\n                    },\n                    y: {\n                        beginAtZero: true,\n                        suggestedMax: maxYValue\n                    }\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    }\n                }\n            }\n        });\n    }\n\n    function handleNewRecord(tabId) {\n        if (tabId === \u0027pesagens\u0027) {\n            openPesagemPopup();\n        } else {\n            // Pode expandir para imuniza├º├Áes, tratamentos etc.\n            showAlert(\u0027Abrindo formul├írio de novo registro em: \u0027 + tabId, \u0027info\u0027, 2500);\n        }\n    }\n\n\n    // Fun├º├Áes para inicializar o sistema de guias, pop-ups e outras funcionalidades\n    function initTabs() {\n        const tabButtons = document.querySelectorAll(\u0027.tab-btn\u0027);\n        const tabContents = document.querySelectorAll(\u0027.tab-content\u0027);\n\n        tabButtons.forEach(button =\u003e {\n            button.addEventListener(\u0027click\u0027, () =\u003e {\n                const tabId = button.getAttribute(\u0027data-tab\u0027);\n\n                tabButtons.forEach(btn =\u003e btn.classList.remove(\u0027active\u0027));\n                tabContents.forEach(content =\u003e content.classList.remove(\u0027active\u0027));\n\n                button.classList.add(\u0027active\u0027);\n                document.getElementById(\u0027tab-\u0027 + tabId).classList.add(\u0027active\u0027);\n\n                fetchTabData(tabId);\n            });\n        });\n    }\n\n    let currentButton = null;\n    let currentType = null;\n\n    function openMenu(data, button, type, labelKey) {\n        currentButton = button;\n        currentType = type;\n\n        const menu = document.getElementById(\u0027pop-up-menu\u0027);\n        const overlay = document.getElementById(\u0027overlay\u0027);\n        const optionsContainer = document.getElementById(\u0027pop-up-options-container\u0027);\n\n        menu.querySelector(\u0027h2\u0027).textContent = \"Selecione \" + type.charAt(0).toUpperCase() + type.slice(1);\n\n        optionsContainer.innerHTML = \u0027\u0027;\n        data.forEach(item =\u003e {\n            const option = document.createElement(\u0027div\u0027);\n            option.classList.add(\u0027pop-up-option\u0027);\n            option.textContent = item[labelKey];\n            option.setAttribute(\u0027data-id\u0027, item.id);\n\n            option.onclick = () =\u003e selectOption(\u0027${animal.animal_id}\u0027, item.id, item[labelKey]);\n            optionsContainer.appendChild(option);\n        });\n\n        overlay.style.display = \u0027block\u0027;\n        menu.style.display = \u0027flex\u0027;\n    }\n\n    function closeMenu() {\n        document.getElementById(\u0027overlay\u0027).style.display = \u0027none\u0027;\n        document.getElementById(\u0027pop-up-menu\u0027).style.display = \u0027none\u0027;\n    }\n\n    function selectOption(idAnimal, valueId, valueText) {\n        if (currentButton \u0026\u0026 currentType) {\n            updateCharacteristic(idAnimal, currentType, valueId, valueText);\n        }\n        closeMenu();\n    }\n\n    async function updateCharacteristic(animalId, type, valueId, valueText) {\n        try {\n            let payload = {\n                animal_id: animalId,\n                caracteristica: type,\n                caracteristica_id: valueId,\n                caracteristica_label: valueText\n            };\n            await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n            });\n\n            currentButton.textContent = valueText;\n            showAlert(\u0027Item salvo com sucesso.\u0027);\n        } catch (error) {\n            showAlert(\u0027Erro ao atualizar: \u0027 + type + \u0027 - \u0027, error);\n        }\n    }\n\n    function initDatePopup() {\n        const nascimentoButton = document.getElementById(\"open-nascimento-menu\");\n        const nascimentoPopup = document.getElementById(\"pop-up-nascimento\");\n        const nascimentoInput = document.getElementById(\"nascimento-input\");\n        const confirmNascimento = document.getElementById(\"confirm-nascimento\");\n        const cancelNascimento = document.getElementById(\"cancel-nascimento\");\n        const overlay = document.getElementById(\"overlay\");\n        const popupActions = nascimentoPopup.querySelector(\u0027.pop-up-actions\u0027);\n\n        nascimentoButton.onclick = function() {\n            if (nascimentoButton.textContent !== \"Definir Data\") {\n                nascimentoInput.value = nascimentoButton.textContent;\n            } else {\n                nascimentoInput.value = \"\";\n            }\n            // Limpa a mensagem de erro ao abrir\n            clearErrorMessage(); \n            overlay.style.display = \"block\";\n            nascimentoPopup.style.display = \"flex\";\n        };\n        \n        function clearErrorMessage() {\n            const errorElement = nascimentoPopup.querySelector(\u0027.error-message-nascimento\u0027);\n            if (errorElement) {\n                errorElement.remove();\n            }\n        }\n\n        function showErrorMessage(message) {\n            clearErrorMessage();\n            popupActions.insertAdjacentHTML(\u0027beforebegin\u0027, \u0027\u003cp class=\"error-message-nascimento\" style=\"color:var(--primary-color); font-size: 0.8rem; text-align:center; margin-bottom: 5px;\"\u003e\u0027 + message + \u0027\u003c/p\u003e\u0027);\n        }\n\n        function closeNascimentoPopup() {\n            clearErrorMessage();\n            overlay.style.display = \"none\";\n            nascimentoPopup.style.display = \"none\";\n        }\n\n        cancelNascimento.onclick = closeNascimentoPopup;\n\n        confirmNascimento.onclick = async function() {\n            const novaData = nascimentoInput.value;\n            if (!novaData) {\n                showErrorMessage(\u0027Selecione uma data v├ílida.\u0027);\n                return;\n            }\n\n            try {\n                await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        animal_id: \u0027${animal.animal_id}\u0027,\n                        caracteristica: \"nascimento\",\n                        data_nascimento: novaData\n                    })\n                });\n\n                nascimentoButton.textContent = novaData;\n                showAlert(\"Data de nascimento atualizada com sucesso!\");\n            } catch (error) {\n                showAlert(\"Erro ao atualizar data de nascimento:\", error);\n            }\n\n            closeNascimentoPopup();\n        };\n\n        document.addEventListener(\"keydown\", function(event) {\n            if (event.key === \"Escape\" || event.key === \"Esc\") {\n                closeMenu();\n                closeNascimentoPopup();\n                closePesagemPopup(); // Fechar pop-up de Pesagem no ESC\n            }\n        });\n    }\n\n    document.addEventListener(\u0027DOMContentLoaded\u0027, function() {\n        initTabs();\n        initDatePopup();\n\n        document.getElementById(\u0027open-especie-menu\u0027).onclick = () =\u003e\n            openMenu(${especies}, document.getElementById(\u0027open-especie-menu\u0027), \u0027especie\u0027, \u0027especie\u0027);\n\n        document.getElementById(\u0027open-raca-menu\u0027).onclick = () =\u003e\n            openMenu(${racas}, document.getElementById(\u0027open-raca-menu\u0027), \u0027raca\u0027, \u0027raca\u0027);\n\n        document.getElementById(\u0027open-genero-menu\u0027).onclick = () =\u003e\n            openMenu(${generos}, document.getElementById(\u0027open-genero-menu\u0027), \u0027genero\u0027, \u0027genero\u0027);\n\n        document.getElementById(\u0027open-porte-menu\u0027).onclick = () =\u003e\n            openMenu(${portes}, document.getElementById(\u0027open-porte-menu\u0027), \u0027porte\u0027, \u0027porte\u0027);\n\n        document.getElementById(\u0027open-cor-menu\u0027).onclick = () =\u003e\n            openMenu(${cores}, document.getElementById(\u0027open-cor-menu\u0027), \u0027cor\u0027, \u0027cor\u0027);\n\n        document.getElementById(\u0027open-pelagem-menu\u0027).onclick = () =\u003e\n            openMenu(${pelagens}, document.getElementById(\u0027open-pelagem-menu\u0027), \u0027pelagem\u0027, \u0027pelagem\u0027);\n            \n        // Configura os bot├Áes do pop-up de pesagem (MANTIDO CASO O POP-UP SEJA USADO PARA \u0027NOVO\u0027)\n        document.getElementById(\u0027confirm-pesagem\u0027).onclick = updatePesagemRecord;\n        document.getElementById(\u0027cancel-pesagem\u0027).onclick = closePesagemPopup;\n        document.getElementById(\u0027confirm-tratamento\u0027).onclick = submitTratamentoForm;\n        document.getElementById(\u0027cancel-tratamento\u0027).onclick = closeTratamentoPopup;\n\n\n        // Carrega a guia de resumo por padr├úo\n        document.querySelector(\u0027[data-tab=\"resumo\"]\u0027).click();\n    });\n\n    function renderizarResumo(resumoData) {\n\n        if (!resumoData || resumoData.length === 0 ) {\n            document.getElementById(\u0027tab-resumo\u0027).innerHTML =\n                \u0027\u003cp class=\"no-data-message\"\u003eNenhum dado de resumo dispon├¡vel.\u003c/p\u003e\u0027;\n            return;\n        }\n\n        const dados = resumoData[0];\n\n        const secoes = {\n            \u0027saude-geral-list\u0027: [\n                { label: \u0027├Ültima avalia├º├úo\u0027, value: dados[\"├Ültima avalia├º├úo\"] || \u0027N/A\u0027 },\n                { label: \u0027Score Corporal\u0027, value: dados[\u0027Score Corporal\u0027] !== null ? dados[\"Score Corporal\"] : \u0027N/A\u0027 },\n                { label: \u0027├ìndice de sa├║de\u0027, value: dados[\u0027├ìndice de sa├║de\u0027] || \u0027N/A\u0027 },\n                { label: \u0027Observa├º├Áes\u0027, value: dados[\u0027Observa├º├Áes\u0027] || \u0027N/A\u0027 }\n            ],\n            \u0027vacinacao-list\u0027: [\n                { label: \u0027├Ültima vacina├º├úo\u0027, value: dados[\u0027├Ültima vacina├º├úo\u0027] || \u0027N/A\u0027 },\n                { label: \u0027Pr├│xima vacina├º├úo\u0027, value: dados[\u0027Pr├│xima vacina├º├úo\u0027] || \u0027N/A\u0027 }\n            ],\n            \u0027parasitas-list\u0027: [\n                { label: \u0027├Ültima vermifuga├º├úo\u0027, value: dados[\u0027├Ültima vermifuga├º├úo\u0027] || \u0027N/A\u0027 },\n                { label: \u0027Pr├│xima vermifuga├º├úo\u0027, value: dados[\u0027Pr├│xima vermifuga├º├úo\u0027] || \u0027N/A\u0027 },\n                { label: \u0027├Ültima desparasita├º├úo\u0027, value: dados[\u0027├Ültima desparasita├º├úo\u0027] || \u0027N/A\u0027 },\n                { label: \u0027Pr├│xima desparasita├º├úo\u0027, value: dados[\u0027Pr├│xima desparasita├º├úo\u0027] || \u0027N/A\u0027 }\n            ],\n            \u0027peso-list\u0027: [\n                { label: \u0027Data da ├║ltima pesagem\u0027, value: dados[\u0027Data pesagem\u0027] || \u0027N/A\u0027 },\n                { label: \u0027Peso atual\u0027, value: dados[\u0027├Ültimo peso\u0027] !== null ? dados[\"├Ültimo peso\"] + \u0027 kg\u0027 : \u0027N/A\u0027 },\n                { label: \u0027Peso anterior\u0027, value: dados[\u0027Peso anterior\u0027] !== null ? dados[\"Peso anterior\"] + \u0027 kg\u0027 : \"N/A\" },\n                { label: \u0027Varia├º├úo de peso\u0027, value: dados[\u0027Varia├º├úo de peso\u0027] || \u0027N/A\u0027 }\n            ]\n        };\n\n        for (const [id, itens] of Object.entries(secoes)) {\n            const container = document.getElementById(id);\n\n            if (container) {\n                container.innerHTML = \u0027\u0027; // limpa antes\n                itens.forEach(item =\u003e {\n                    const itemHTML =\n                        \u0027\u003cdiv class=\"resume-item\"\u003e\u003cstrong\u003e\u0027 + item.label + \u0027:\u003c/strong\u003e \u0027 +\n                        \u0027\u003cspan class=\"resume-value\"\u003e\u0027 + item.value + \u0027\u003c/span\u003e\u003c/div\u003e\u0027;\n                    container.innerHTML += itemHTML;\n                });\n            }\n        }\n    }\n\n    function showAlert(message, type = \u0027success\u0027, duration = 1500) {\n        console.log(\u0027showAlert:\u0027 + message + \u0027, \u0027 + type + \u0027, \u0027 + duration);\n        const popup = document.getElementById(\u0027alert-popup\u0027);\n        const icon = document.getElementById(\u0027alert-icon\u0027);\n        const messageText = document.getElementById(\u0027alert-message\u0027);\n\n        // Limpa classes anteriores e adiciona a nova\n        popup.className = \u0027alert-popup\u0027;\n        popup.classList.add(type);\n        popup.classList.add(\u0027show\u0027);\n        \n        // Define o texto da mensagem\n        messageText.textContent = message;\n\n        // Limpa e define o conte├║do do ├¡cone\n        //icon.innerHTML = \u0027\u0027;\n        //icon.classList.add(type);\n\n        // Define um temporizador para esconder o pop-up\n        setTimeout(() =\u003e {\n            popup.classList.remove(\u0027show\u0027);\n        }, duration);\n    }\n\u003c/script\u003e\n\n\u003cscript\u003e\n      // Fun├º├úo para simular o in├¡cio da cria├º├úo de um novo registro\n    function newRecord(tabId) {\n        showAlert(\u0027Iniciando a cria├º├úo de um novo registro em: \u0027 + tabId, \u0027info\u0027, 2500);\n        // Coloque aqui a l├│gica para abrir um pop-up/formul├írio \n        // para a cria├º├úo do novo item para a guia (tabId)\n    }\n\u003c/script\u003e\n\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eAdote ${animal.nome}\u003c/title\u003e\n\u003c/head\u003e\n\n\u003cbody\u003e\n    \u003cheader class=\"header\"\u003e\n        \u003cdiv class=\"header-content\"\u003e\n            \u003cimg class=\"header-logo\" src=\"${img_logo}\" alt=\"Logo Kaniu\"/\u003e\n        \u003c/div\u003e\n    \u003c/header\u003e\n    \u003cdiv class=\"main-content\"\u003e\n        \u003cdiv class=\"animal-details-frame\"\u003e\n            \u003ca href=\"${app_url}\" class=\"back-button\"\u003eVoltar\u003c/a\u003e\n            \u003cdiv class=\"content-wrapper\"\u003e\n                \u003cdiv class=\"animal-photo-container\"\u003e\n                    \u003cimg class=\"animal-photo\" src=\"${animal.foto}\" alt=\"Foto de ${animal.nome}\" /\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"text-content\"\u003e\n                    \u003cdiv class=\"animal-header\"\u003e\n                        \u003ch1\u003e${animal.nome}\u003c/h1\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"button-container\"\u003e\n                        ${iconesAnimal}\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"details-container\"\u003e\n                \u003cdiv class=\"details-grid\"\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\n                        \u003cstrong\u003eEsp├®cie:\u003c/strong\u003e\n                        \u003cbutton class=\"detail-button\" id=\"open-especie-menu\"\u003e${animal.especie}\u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\n                        \u003cstrong\u003eRa├ºa:\u003c/strong\u003e\n                        \u003cbutton class=\"detail-button\" id=\"open-raca-menu\"\u003e${animal.ra├ºa}\u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\n                        \u003cstrong\u003eG├¬nero:\u003c/strong\u003e\n                        \u003cbutton class=\"detail-button\" id=\"open-genero-menu\"\u003e${animal.sexo}\u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\n                        \u003cstrong\u003ePorte:\u003c/strong\u003e\n                        \u003cbutton class=\"detail-button\" id=\"open-porte-menu\"\u003e${animal.porte}\u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\n                        \u003cstrong\u003eCor:\u003c/strong\u003e\n                        \u003cbutton class=\"detail-button\" id=\"open-cor-menu\"\u003e${animal.cor}\u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\n                        \u003cstrong\u003ePelagem:\u003c/strong\u003e\n                        \u003cbutton class=\"detail-button\" id=\"open-pelagem-menu\"\u003e${animal.pelagem}\u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\n                        \u003cstrong\u003eData de Nascimento:\u003c/strong\u003e\n                        \u003cbutton id=\"open-nascimento-menu\" class=\"detail-button\"\u003e${animal.nascimento ? animal.nascimento : \u0027Definir Data\u0027}\u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\u003cstrong\u003eFaixa Et├íria:\u003c/strong\u003e \u003cspan class=\"characteristic-box\"\u003e${animal.faixa_etaria}\u003c/span\u003e\u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\u003cstrong\u003eIdade:\u003c/strong\u003e \u003cspan class=\"characteristic-box\"\u003e${ageString}\u003c/span\u003e\u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\u003cstrong\u003ePeso:\u003c/strong\u003e \u003cspan class=\"characteristic-box\"\u003e${formatValue(animal.peso)} kg\u003c/span\u003e\u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\u003cstrong\u003eAltura:\u003c/strong\u003e \u003cspan class=\"characteristic-box\"\u003e${formatValue(animal.altura)} cm\u003c/span\u003e\u003c/div\u003e\n                    \u003cdiv class=\"detail-item\"\u003e\u003cstrong\u003eComprimento:\u003c/strong\u003e \u003cspan class=\"characteristic-box\"\u003e${formatValue(animal.comprimento)} cm\u003c/span\u003e\u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv class=\"tab-container\"\u003e\n            \u003cdiv class=\"tab-nav\"\u003e\n                \u003cbutton class=\"tab-btn active\" data-tab=\"resumo\"\u003eResumo\u003c/button\u003e\n                \u003cbutton class=\"tab-btn\" data-tab=\"eventos\"\u003eHist├│rico\u003c/button\u003e\n                \u003cbutton class=\"tab-btn\" data-tab=\"avaliacoes\"\u003eAvalia├º├úo\u003c/button\u003e\n                \u003cbutton class=\"tab-btn\" data-tab=\"pesagens\"\u003ePesagem\u003c/button\u003e\n                \u003cbutton class=\"tab-btn\" data-tab=\"imunizacoes\"\u003eImuniza├º├úo\u003c/button\u003e\n                \u003cbutton class=\"tab-btn\" data-tab=\"tratamentos\"\u003eTratamento\u003c/button\u003e\n                \u003cbutton class=\"tab-btn\" data-tab=\"arquivos\"\u003eArquivos\u003c/button\u003e\n            \u003c/div\u003e\n\n            \u003cdiv class=\"tab-content-area\"\u003e\n                \u003cdiv id=\"tab-resumo\" class=\"tab-content\"\u003e\n                    \u003cdiv class=\"resume-sections\"\u003e\n                        \u003cdiv class=\"resume-section\"\u003e\n                            \u003ch3 class=\"resume-title\"\u003eSa├║de Geral\u003c/h3\u003e\n                            \u003cdiv id=\"saude-geral-list\" class=\"resume-list\"\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n\n                        \u003cdiv class=\"resume-section\"\u003e\n                            \u003ch3 class=\"resume-title\"\u003eVacina├º├úo\u003c/h3\u003e\n                            \u003cdiv id=\"vacinacao-list\" class=\"resume-list\"\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n\n                        \u003cdiv class=\"resume-section\"\u003e\n                            \u003ch3 class=\"resume-title\"\u003eControle de Parasitas\u003c/h3\u003e\n                            \u003cdiv id=\"parasitas-list\" class=\"resume-list\"\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n\n                        \u003cdiv class=\"resume-section\"\u003e\n                            \u003ch3 class=\"resume-title\"\u003eAvalia├º├úo e Peso\u003c/h3\u003e\n                            \u003cdiv id=\"peso-list\" class=\"resume-list\"\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv id=\"tab-eventos\" class=\"tab-content\"\u003e\u003c/div\u003e\n                \u003cdiv id=\"tab-avaliacoes\" class=\"tab-content\"\u003e\u003c/div\u003e\n                \u003cdiv id=\"tab-pesagens\" class=\"tab-content\"\u003e\u003c/div\u003e\n                \u003cdiv id=\"tab-imunizacoes\" class=\"tab-content\"\u003e\u003c/div\u003e\n                \u003cdiv id=\"tab-tratamentos\" class=\"tab-content\"\u003e\u003c/div\u003e\n                \u003cdiv id=\"tab-arquivos\" class=\"tab-content\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv id=\"overlay\" class=\"overlay\"\u003e\u003c/div\u003e\n    \u003cdiv id=\"pop-up-menu\" class=\"pop-up-menu\"\u003e\n        \u003cspan class=\"pop-up-close\" onclick=\"closeMenu()\"\u003e\u0026times;\u003c/span\u003e\n        \u003ch2\u003eSelecione a Esp├®cie\u003c/h2\u003e\n        \u003cdiv id=\"pop-up-options-container\" class=\"pop-up-options-container\"\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv id=\"pop-up-nascimento\" class=\"pop-up-menu\" style=\"width: 280px; padding: 15px;\"\u003e\n        \u003cspan class=\"pop-up-close\" onclick=\"document.getElementById(\u0027pop-up-nascimento\u0027).style.display=\u0027none\u0027; document.getElementById(\u0027overlay\u0027).style.display=\u0027none\u0027;\"\u003e\u0026times;\u003c/span\u003e\n        \u003ch2 id=\"nascimento-popup-title\"\u003eAlterar Data de Nascimento\u003c/h2\u003e\n        \u003cdiv class=\"pop-up-options-container\" style=\"align-items: center; width: 100%; box-sizing: border-box;\"\u003e\n            \u003cinput type=\"date\" id=\"nascimento-input\" class=\"date-input\" style=\"width: 100%;\" /\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"pop-up-actions\" style=\"margin-top: 5px;\"\u003e\n            \u003cbutton id=\"confirm-nascimento\" class=\"detail-button\" style=\"background-color: var(--primary-color); color: var(--card-background); flex: 1; max-width: 100px;\"\u003eSalvar\u003c/button\u003e\n            \u003cbutton id=\"cancel-nascimento\" class=\"detail-button\" style=\"flex: 1; max-width: 100px;\"\u003eCancelar\u003c/button\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \n    \u003cdiv id=\"alert-popup\" class=\"alert-popup\"\u003e\n        \u003cspan id=\"alert-message\"\u003e\u003c/span\u003e\n    \u003c/div\u003e\n\n    \u003cdiv id=\"pop-up-tratamento\" class=\"pop-up-menu\" style=\"width: 320px; padding: 40px;\"\u003e\n        \u003cspan class=\"pop-up-close\" onclick=\"closeTratamentoPopup()\"\u003e\u0026times;\u003c/span\u003e\n        \u003ch2\u003eNovo Tratamento\u003c/h2\u003e\n        \u003cdiv class=\"pop-up-content\" style=\"display: flex; flex-direction: column; gap: 5px;\"\u003e\n            \u003cinput type=\"hidden\" id=\"tratamento-id\" /\u003e\n            \n            \u003clabel style=\"font-size: 0.8rem; color: var(--text-dark);\"\u003eData do Tratamento\u003c/label\u003e\n            \u003cinput type=\"date\" id=\"tratamento-data-input\" class=\"date-input\" /\u003e\n            \n            \u003clabel style=\"font-size: 0.8rem; color: var(--text-dark);\"\u003eVeterinario Responsavel\u003c/label\u003e\n            \u003cinput type=\"text\" id=\"tratamento-veterinario-input\" class=\"date-input\" placeholder=\"Nome do veterinario\" /\u003e\n            \n            \u003clabel style=\"font-size: 0.8rem; color: var(--text-dark);\"\u003eDescricao\u003c/label\u003e\n            \u003ctextarea id=\"tratamento-descricao-input\" class=\"date-input\" style=\"min-height: 80px;\" placeholder=\"Detalhes do tratamento\"\u003e\u003c/textarea\u003e\n            \n            \u003clabel style=\"font-size: 0.8rem; color: var(--text-dark);\"\u003eMedicamentos\u003c/label\u003e\n            \u003ctextarea id=\"tratamento-medicamentos-input\" class=\"date-input\" style=\"min-height: 80px;\" placeholder=\"Liste um por linha\"\u003e\u003c/textarea\u003e\n            \n            \u003clabel style=\"font-size: 0.8rem; color: var(--text-dark);\"\u003eFinalizado\u003c/label\u003e\n            \u003cselect id=\"tratamento-finalizada-input\" class=\"date-input\"\u003e\n                \u003coption value=\"false\"\u003eNao\u003c/option\u003e\n                \u003coption value=\"true\"\u003eSim\u003c/option\u003e\n            \u003c/select\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"pop-up-actions\" style=\"margin-top: 5px;\"\u003e\n            \u003cbutton id=\"cancel-tratamento\" class=\"cancel-button\" style=\"flex: 1; max-width: 100px;\"\u003eCancelar\u003c/button\u003e\n            \u003cbutton id=\"confirm-tratamento\" class=\"action-button\" style=\"flex: 1; max-width: 100px;\"\u003eSalvar\u003c/button\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv id=\"pop-up-pesagem\" class=\"pop-up-menu\" style=\"width: 280px; padding: 40px;\"\u003e\n        \u003cspan class=\"pop-up-close\" onclick=\"closePesagemPopup()\"\u003e\u0026times;\u003c/span\u003e\n        \u003ch2\u003ePesagem\u003c/h2\u003e\n        \u003cdiv class=\"pop-up-content\" style=\"display: flex; flex-direction: column; gap: 5px;\"\u003e\n            \u003cinput type=\"hidden\" id=\"pesagem-id\" /\u003e\n            \n            \u003clabel style=\"font-size: 0.8rem; color: var(--text-dark);\"\u003eData da Medi├º├úo\u003c/label\u003e\n            \u003cinput type=\"date\" id=\"pesagem-data-input\" class=\"date-input\" /\u003e\n            \n            \u003clabel style=\"font-size: 0.8rem; color: var(--text-dark);\"\u003ePeso (kg)\u003c/label\u003e\n            \u003cinput type=\"number\" step=\"0.1\" id=\"pesagem-peso-input\" class=\"date-input\" placeholder=\"Ex: 5.2\" /\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"pop-up-actions\" style=\"margin-top: 5px;\"\u003e\n            \u003cbutton id=\"cancel-pesagem\" class=\"cancel-button\" style=\"flex: 1; max-width: 100px;\"\u003eCancelar\u003c/button\u003e\n            \u003cbutton id=\"confirm-pesagem\" class=\"action-button\" flex: 1; max-width: 100px;\"\u003eSalvar\u003c/button\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cscript\u003e\n        (function () {\n          function setToolbarOffsets() {\n            document.querySelectorAll(\u0027.tab-content\u0027).forEach(tab =\u003e {\n              const toolbar = tab.querySelector(\u0027.new-button-fixed\u0027);\n              const toolbarH = toolbar ? toolbar.getBoundingClientRect().height : 0;\n              const padTop = parseFloat(getComputedStyle(tab).paddingTop) || 0;\n              const offset = toolbarH + padTop;\n              tab.style.setProperty(\u0027--tab-header-offset\u0027, offset + \u0027px\u0027);\n            });\n          }\n        \n          // inicial + resize\n          window.addEventListener(\u0027load\u0027, setToolbarOffsets);\n          window.addEventListener(\u0027resize\u0027, setToolbarOffsets);\n        \n          // se a barra ÔÇ£NovoÔÇØ mudar de altura (quebrar linha, fonte, etc.)\n          const ro = new ResizeObserver(setToolbarOffsets);\n          document.querySelectorAll(\u0027.new-button-fixed\u0027).forEach(el =\u003e ro.observe(el));\n        })();\n    \u003c/script\u003e\n\n    \u003cscript\u003e\n        (function () {\n          function setToolbarOffsets() {\n            document.querySelectorAll(\u0027.tab-content\u0027).forEach(tab =\u003e {\n              const toolbar = tab.querySelector(\u0027.new-button-fixed\u0027);\n              const toolbarH = toolbar ? toolbar.getBoundingClientRect().height : 0;\n              const padTop = parseFloat(getComputedStyle(tab).paddingTop) || 0;\n              const offset = toolbarH + padTop;\n              tab.style.setProperty(\u0027--tab-header-offset\u0027, offset + \u0027px\u0027);\n            });\n          }\n        \n          window.addEventListener(\u0027load\u0027, setToolbarOffsets);\n          window.addEventListener(\u0027resize\u0027, setToolbarOffsets);\n        \n          const ro = new ResizeObserver(setToolbarOffsets);\n          document.querySelectorAll(\u0027.new-button-fixed\u0027).forEach(el =\u003e ro.observe(el));\n        })();\n    \u003c/script\u003e\n\n\u003c/body\u003e\n\n\u003c/html\u003e\n`;\n\nreturn [{ json: { html: html } }];\r\n\r\n"{ background-color: var(--primary-color); color: var(--card-background); }\n    \n    .detail-button {\n        display: inline-block;\n        background-color: var(--background-light);\n        border: none;\n        color: var(--secondary-color);\n        padding: 5px 12px;\n        border-radius: 6px;\n        text-decoration: none;\n        font-size: 0.8rem;\n        transition: all 0.2s ease;\n        box-shadow: none;\n        font-weight: 500;\n        text-align: center;\n        white-space: nowrap;\n        cursor: pointer;\n    }\n    .detail-button:hover { background-color: var(--secondary-color); color: var(--card-background); }\n\n    .button-container { display: flex; gap: 5px; flex-shrink: 0; }\n\n    .img-button-wrapper {\n        position: relative;\n        display: flex; align-items: center; justify-content: center;\n        width: 32px; height: 32px; border-radius: 8px;\n        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n        transition: all 0.2s ease;\n        cursor: default;\n    }\n    .img-button { width: 24px; height: 24px; object-fit: contain; }\n\n    .img-button-wrapper .tooltip {\n        visibility: hidden; width: max-content;\n        background-color: var(--secondary-color); color: var(--card-background);\n        text-align: center; border-radius: 6px; padding: 5px 10px;\n        position: absolute; z-index: 1; bottom: 150%; left: 50%; transform: translateX(-50%);\n        opacity: 0; transition: opacity 0.3s; font-size: 0.75rem; white-space: nowrap;\n    }\n    .img-button-wrapper .tooltip::after {\n        content: \"\"; position: absolute; top: 100%; left: 50%; margin-left: -5px;\n        border-width: 5px; border-style: solid;\n        border-color: var(--secondary-color) transparent transparent transparent;\n    }\n    .img-button-wrapper:hover .tooltip { visibility: visible; opacity: 1; }\n\n    .overlay {\n        position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n        background-color: rgba(0, 0, 0, 0.5); backdrop-filter: blur(5px);\n        z-index: 20; display: none;\n    }\n    \n    .pop-up-menu {\n        position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);\n        background-color: var(--card-background); border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n        padding: 15px; z-index: 30; display: none; flex-direction: column; gap: 10px;\n        max-height: 80vh; overflow-y: auto; width: 300px;\n    }\n    .pop-up-menu h2 { margin: 0 0 5px 0; font-size: 1rem; color: var(--secondary-color); text-align: center; }\n    .pop-up-options-container { display: flex; flex-direction: column; gap: 5px; }\n    .pop-up-option {\n        padding: 8px 12px; background-color: var(--background-light); border-radius: 6px;\n        cursor: pointer; transition: all 0.2s ease; font-weight: 500; font-size: 0.8rem;\n    }\n    .pop-up-option:hover, .pop-up-option.selected { background-color: var(--secondary-color); color: var(--card-background); }\n    .pop-up-close { position: absolute; top: 5px; right: 10px; font-size: 1.2rem; cursor: pointer; color: var(--text-faded); }\n    \n    .date-input { padding: 10px 15px; border-radius: 6px; border: 1px solid #ccc; width: 100%; box-sizing: border-box; font-size: 14px; }\n    .pop-up-actions { display: flex; justify-content: center; gap: 15px; margin-top: 10px; flex-wrap: wrap; }\n    .confirm-button, .cancel-button { padding: 10px 20px; border-radius: 6px; border: none; cursor: pointer; flex: 1; max-width: 120px; }\n    .confirm-button { background-color: #4CAF50; color: #fff; }\n    .cancel-button { background-color: #ccc; }\n\n    .small-pop-up { min-height: auto; padding: 16px; gap: 12px; flex-direction: column; justify-content: flex-start; }\n    .small-pop-up h2 { font-size: 16px; margin-bottom: 12px; }\n    .pop-up-content { margin-bottom: 16px; }\n\n    .popup-button {\n        background-color: #f0f0f0; border: 1px solid #ccc; border-radius: 8px;\n        padding: 6px 14px; cursor: pointer; font-size: 14px; transition: background 0.2s;\n    }\n    .popup-button:hover { background-color: #e0e0e0; }\n\n    #pop-up-nascimento {\n        position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);\n        background-color: var(--card-background); border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n        padding: 15px; z-index: 30; display: none; flex-direction: column; gap: 10px; width: 250px;\n    }\n\n    /* Sistema de Guias */\n    .tab-container {\n        width: 100%; height: 100%;\n        display: flex; flex-direction: column;\n        background-color: var(--background-light);\n        border-radius: 10px; overflow: hidden;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);\n        flex: 1;\n    }\n\n    .tab-nav {\n        display: flex; background-color: var(--background-light);\n        border-bottom: 2px solid var(--border-color);\n        padding: 0; margin: 0; flex-shrink: 0;\n        overflow-x: auto; scrollbar-width: none; -ms-overflow-style: none;\n    }\n    .tab-nav::-webkit-scrollbar { display: none; }\n\n    .tab-btn {\n        flex: 1; min-width: 80px; padding: 15px 20px;\n        background-color: transparent; border: none; border-bottom: 3px solid transparent;\n        color: var(--text-light); font-size: 0.8rem; font-weight: 500; cursor: pointer;\n        transition: all 0.3s ease; white-space: nowrap; position: relative; text-align: center;\n    }\n    .tab-btn:hover { background-color: rgba(255, 255, 255, 0.5); color: var(--secondary-color); }\n    .tab-btn.active { background-color: var(--card-background); color: var(--secondary-color); border-bottom-color: var(--primary-color); font-weight: 600; }\n\n    .tab-content-area {\n        flex: 1; background-color: var(--card-background);\n        overflow: hidden; position: relative; font-size: 0.7rem;\n    }\n\n    .tab-content {\n        display: none; height: 100%;\n        padding: var(--tab-content-pt) 20px 20px;\n        overflow-y: auto; box-sizing: border-box;\n        position: relative; min-height: 200px;\n    }\n    .tab-content.active { display: block; }\n\n    .tab-content::-webkit-scrollbar { width: 8px; }\n    .tab-content::-webkit-scrollbar-track { background: var(--background-light); border-radius: 4px; }\n    .tab-content::-webkit-scrollbar-thumb { background-color: var(--text-faded); border-radius: 4px; }\n    .tab-content::-webkit-scrollbar-thumb:hover { background-color: var(--secondary-color); }\n\n    /* Toolbar ÔÇ£NovoÔÇØ (sticky) */\n    .new-button-fixed {\n        position: sticky; top: 0; z-index: 10;\n        background: var(--card-background);\n        padding: 8px; min-height: var(--tab-toolbar-h);\n        display: flex; align-items: center; justify-content: flex-end;\n    }\n    .new-button-fixed .action-button {\n        background-color: var(--primary-color); color: #fff;\n        font-size: 0.85rem; padding: 6px 12px; border: none; border-radius: 6px;\n        cursor: pointer; transition: background 0.2s;\n    }\n    .new-button-fixed .action-button:hover { background-color: #3a4ac0; }\n\n    /* Tabela com header fixo */\n    .tab-table {\n        width: 100%;\n        border-collapse: separate;  /* melhor para sticky (Safari/Chromium) */\n        border-spacing: 0;\n        margin-top: 0;\n    }\n\n    /* Header gruda e usa offset calculado */\n    .tab-table thead {\n        position: sticky;\n        top: var(--tab-header-offset);\n        z-index: 5;\n        background: var(--background-light);\n    }\n\n    /* Linha sutil sob o header */\n    .tab-table thead th::after {\n        content: \"\";\n        position: absolute;\n        left: 0; right: 0; bottom: -1px;\n        height: 1px;\n        background: var(--border-color);\n    }\n\n    /* C├®lulas */\n    .tab-table th, .tab-table td {\n        padding: 12px 15px; text-align: left;\n        border-bottom: 1px solid var(--border-color);\n    }\n    .tab-table thead th {\n        position: relative;      /* para o ::after */\n        background-color: var(--background-light);\n        font-weight: 600; color: var(--text-dark);\n    }\n    .tab-table td { color: var(--text-light); }\n    .tab-table tbody tr:hover { background-color: rgba(90, 93, 127, 0.03); }\n\n    /* Caso alguma guia n├úo tenha toolbar, zere o offset nessa guia */\n    #tab-resumo .tab-table thead,\n    #tab-qualquer-guia-sem-toolbar .tab-table thead { top: 0; }\n\n    /* Timeline / Resumo */\n    .timeline-container { padding: 20px; }\n    .timeline-header { display: flex; align-items: center; gap: 15px; margin-bottom: 15px; padding: 0 15px; }\n    .timeline-column-title { flex: 1; font-weight: 600; color: var(--secondary-color); text-align: center; }\n    .timeline-column-title.date-column { min-width: 100px; text-align: left; }\n    .timeline-grid { display: flex; flex-direction: column; gap: 8px; }\n    .timeline-item { background-color: var(--background-light); padding: 10px 15px; border-radius: 8px; display: flex; align-items: center; gap: 15px; }\n    .timeline-item strong { min-width: 100px; color: var(--text-dark); font-weight: 500; }\n    .timeline-box { flex: 1; background-color: var(--card-background); color: var(--text-light); padding: 6px 10px; border-radius: 6px; font-weight: 500; text-align: center; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }\n\n    .resume-sections { display: grid; grid-template-columns: 1fr 1fr; gap: 30px; padding: 10px; }\n    .resume-section { margin-bottom: 0; }\n    .resume-title { color: var(--secondary-color); font-weight: 600; margin: 0 0 15px 0; padding-bottom: 8px; border-bottom: 2px solid var(--background-light); }\n    .resume-list { display: flex; flex-direction: column; gap: 8px; }\n    .resume-item { background-color: var(--background-light); padding: 10px 15px; border-radius: 8px; display: flex; align-items: center; justify-content: space-between; }\n    .resume-item strong { font-size: 0.85rem; color: var(--text-dark); font-weight: 500; }\n    .resume-value { background-color: var(--card-background); color: var(--text-light); padding: 4px 10px; border-radius: 6px; font-size: 0.8rem; font-weight: 500; white-space: nowrap; }\n\n    .content-section { margin-bottom: 20px; }\n    .content-section h3 { color: var(--secondary-color); margin-bottom: 10px; }\n    .content-section p { color: var(--text-light); line-height: 1.6; }\n\n    @media (max-width: 768px) {\n        .timeline-header { display: none; }\n        .timeline-item { flex-direction: column; align-items: stretch; gap: 8px; }\n        .timeline-item strong {\n            min-width: auto; text-align: center; background-color: var(--secondary-color);\n            color: var(--card-background); padding: 6px 10px; border-radius: 6px;\n        }\n        .timeline-box { text-align: left; }\n        .resume-sections { grid-template-columns: 1fr; gap: 20px; }\n        \n        .tab-btn { min-width: 70px; padding: 12px 15px; font-size: 0.8rem; }\n        .tab-content { padding: 10px; }\n\n        /* Em telas menores, a toolbar costuma crescer um pouco */\n        :root { --tab-toolbar-h: 52px; }\n    }\n\n    @media (max-width: 480px) {\n        .main-content { flex-direction: column; }\n        .animal-details-frame { width: 100%; height: auto; }\n        .content-wrapper, .text-content { height: auto; }\n        .pop-up-menu { width: 85%; }\n        .tab-btn { min-width: 60px; padding: 10px 12px; font-size: 0.75rem; }\n        .tab-content { padding: 10px; }\n    }\n\n    .chart-container {\n        position: relative; width: 100%; max-height: 500px; margin-top: 2rem;\n        display: flex; justify-content: center; align-items: center;\n    }\n\n    /* Pop-up de alerta */\n    .alert-popup {\n        position: fixed; top: 20px; left: 50%; transform: translateX(-50%);\n        background-color: #fff; color: #333; padding: 15px 20px; border-radius: 8px;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n        display: flex; align-items: center;\n        opacity: 0; visibility: hidden;\n        transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;\n        z-index: 1000; min-width: 250px;\n    }\n    .alert-popup.success, .alert-popup.error { color: var(--secondary-color); }\n    .alert-popup.show { opacity: 1; visibility: visible; }\n    .alert-icon { font-size: 12px; font-weight: 400; }\n\n    i { color: var(--secondary-color); }\n    \n    /* Bot├Áes de a├º├úo gen├®ricos */\n    .action-button-container { position: absolute; bottom: 20px; right: 20px; z-index: 10; }\n    .action-button {\n        background-color: var(--background-light); color: var(--primary-color);\n        padding: 8px 15px; border: none; border-radius: 5px; cursor: pointer;\n        font-size: 14px; text-decoration: none; width: 100px;\n        transition: background-color 0.3s ease; box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    }\n    .action-button:hover { color: #fff; background-color: var(--primary-color); }\n    .cancel-button {\n        background-color: var(--background-light); color: var(--secondary-color);\n        padding: 8px 15px; border: none; border-radius: 5px; cursor: pointer;\n        font-size: 14px; text-decoration: none; width: 100px;\n        transition: background-color 0.3s ease; box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    }\n    .cancel-button:hover { color: #fff; background-color: var(--secondary-color); }\n</style>\n`;\n\nreturn { style };\n"
                },
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                    -448,
                    0
                ],
                "id": "7678ed7c-69a3-4cd6-a44f-df1301ee6e56",
                "name": "Estilo"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "25a0b953-d8c5-4d02-b97c-609d88eb0022",
                                "name": "img_logo",
                                "value": "https://i.ibb.co/dwmMKwxD/kaniu-logo-laranja.png",
                                "type": "string"
                            },
                            {
                                "id": "6ddb1ed1-4e1c-469e-ace0-014a2d906a49",
                                "name": "fav_icon",
                                "value": "https://i.ibb.co/TxdLD7hF/kaniu-fav-icon-laranja.png",
                                "type": "string"
                            },
                            {
                                "id": "0f28499b-2cb0-4a7d-a827-0435c5e410f1",
                                "name": "dog_font",
                                "value": "https://raw.githubusercontent.com/viralatinhaz/kaniu/main/GoodDogCool.TTF",
                                "type": "string"
                            },
                            {
                                "id": "30b05b97-95a1-4c9e-9cfc-252a58a0f9bf",
                                "name": "filter_satus",
                                "value": "={{ $json.query.status }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -672,
                    0
                ],
                "id": "d01121fa-0ad9-4912-aeb3-f97160534271",
                "name": "Constants",
                "notesInFlow": true
            }
        ],
            "pinData": {
        "Kaniu": [
            {
                "json": {
                    "headers": {
                        "host": "karah-n8n.uzd6db.easypanel.host",
                        "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36",
                        "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
                        "accept-encoding": "gzip, deflate, br, zstd",
                        "accept-language": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7",
                        "cache-control": "no-cache",
                        "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2FCuRonzoh%2FasFsrkD3ctaA252N%2FdASUZE%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX19cdaQtWm6ffyQUabVZV9V8H9khgHrTS%2Bo%3D; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX19dl8uoTfvV08HGt%2F%2F%2Bi%2FbyfoCcekyWENV%2FNnD9FBDHxGuvHjAXDiWcIa0e8c3gvPwpl15jp56dCw%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX19WX33CWMiADZdozdomlqjymRD6j%2FfkkHS8aPYdBOOtY4Zm9UQb8PGXAs2VgD%2BwnzrGaAVZerU4HJgHhVJwF8Hl%2F47BlJkUpuN8D5mfA16EOl1It1Uo5XJans3iWzvGWLAuGcOkaEdhS2Pp%2F0Yu57GRexcAT1RUzy8%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX1%2BfT4UJsr3q2pg4jel7JqSmPN1Nzu4zwnM0U3caEhzxr%2BbJcaysx5a65ftMOBjfAus4AcRDhwctgr5iL8JqmoBZnuRsqUUp%2Fvh6o3jO%2BpYNtF8UNa%2BxMpsUGzkhxOw79Lfcqk5XPShhsaihzrOkh%2Fhj1wD7MqMCZmA%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22c241ff24a9ad53940b8c3b07f3121394f2a5667daf04331aaa56a13d92e8e026%2336e98418-cb69-4c27-b2c6-02d98ffe06fd%22%2C%22%24sesid%22%3A%5B1759770384896%2C%220199ba7c-f1d9-7f76-9b18-b73d5454e7fa%22%2C1759770374616%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22http%3A%2F%2F31.97.251.141%3A3000%2F%22%2C%22u%22%3A%22https%3A%2F%2Fkarah-n8n.uzd6db.easypanel.host%2Fsetup%22%7D%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2FEJ%2BM2QJnCT5InD5A57fV3KTz%2BiPYBBw2GYKTdQdXsqBaGZW71MDfalulzyID3fvQmonuXb%2FPJzs5pMHmMb1nuW065dWLG2E22CUBM8y1%2BY93GDJKRxkfYeBxcVMYhPzpLv8IiP0PhjQ%3D%3D",
                        "dnt": "1",
                        "pragma": "no-cache",
                        "priority": "u=0, i",
                        "referer": "https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu-beta?status=Abrigado",
                        "sec-ch-ua": "\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Google Chrome\";v=\"140\"",
                        "sec-ch-ua-mobile": "?0",
                        "sec-ch-ua-platform": "\"Windows\"",
                        "sec-fetch-dest": "document",
                        "sec-fetch-mode": "navigate",
                        "sec-fetch-site": "same-origin",
                        "sec-fetch-user": "?1",
                        "upgrade-insecure-requests": "1",
                        "x-forwarded-for": "190.52.72.237",
                        "x-forwarded-host": "karah-n8n.uzd6db.easypanel.host",
                        "x-forwarded-port": "443",
                        "x-forwarded-proto": "https",
                        "x-forwarded-server": "03196bb10cdb",
                        "x-real-ip": "190.52.72.237"
                    },
                    "params": {},
                    "query": {
                        "animal_id": "8bd4401b-a768-40d6-ba0d-79c5e7a05304"
                    },
                    "body": {},
                    "webhookUrl": "https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu-beta",
                    "executionMode": "production"
                }
            }
        ]
    },
    "connections": {
        "Kaniu": {
            "main": [
                [
                    {
                        "node": "Constants",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get Animals": {
            "main": [
                [
                    {
                        "node": "Empty",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "List Animals": {
            "main": [
                [
                    {
                        "node": "Animal Statuses",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "Tables",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get Details": {
            "main": [
                [
                    {
                        "node": "Details Page",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Sort": {
            "main": [
                [
                    {
                        "node": "Combine",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Empty": {
            "main": [
                [
                    {
                        "node": "Animals List Page",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "Sort",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Combine": {
            "main": [
                [
                    {
                        "node": "Animals List Page",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Animals List Page": {
            "main": [
                [
                    {
                        "node": "Respond",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Animal Statuses": {
            "main": [
                [
                    {
                        "node": "Get Animals",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Tables": {
            "main": [
                [
                    {
                        "node": "Get Details",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Details Page": {
            "main": [
                [
                    {
                        "node": "Respond",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Icons": {
            "main": [
                [
                    {
                        "node": "List Animals",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Estilo": {
            "main": [
                [
                    {
                        "node": "Icons",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Constants": {
            "main": [
                [
                    {
                        "node": "Estilo",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "active": true,
        "settings": {
        "executionOrder": "v1"
    },
    "versionId": "5f762d56-5753-478b-b6b0-9e2efe480e1c",
        "meta": {
        "templateCredsSetupCompleted": true,
            "instanceId": "c241ff24a9ad53940b8c3b07f3121394f2a5667daf04331aaa56a13d92e8e026"
    },
    "id": "lg05b2UeiPYFjKzu",
        "tags": []
}




