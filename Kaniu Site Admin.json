{
  "name": "Kaniu Site Admin",
  "nodes": [
    {
      "parameters": {
        "path": "kaniu",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -880,
        0
      ],
      "id": "9423432d-b27e-4428-b023-63f52895b2e0",
      "name": "Kaniu",
      "webhookId": "1fc5f8c9-f235-422d-8674-c49ce8b23af2"
    },
    {
      "parameters": {
        "content": "# Site Viralatinhaz Admin\n\n\n",
        "height": 620,
        "width": 2100,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1024,
        -240
      ],
      "typeVersion": 1,
      "id": "7d8e0671-406b-4970-a899-1ecb8fe69af8",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "_n8n_animais_dados",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "canil",
              "condition": "eq",
              "keyValue": "1"
            },
            {
              "keyName": "especie",
              "condition": "like",
              "keyValue": "={{ $('Kaniu').item.json.query?.especie || '*' }}"
            },
            {
              "keyName": "sexo",
              "condition": "like",
              "keyValue": "={{ $('Kaniu').item.json.query?.sexo || '*' }}"
            },
            {
              "keyName": "porte",
              "condition": "like",
              "keyValue": "={{ $('Kaniu').item.json.query?.porte || '*' }}"
            },
            {
              "keyName": "faixa_etaria",
              "condition": "like",
              "keyValue": "={{ $('Kaniu').item.json.query?.idade || '*' }}"
            },
            {
              "keyName": "status",
              "condition": "like",
              "keyValue": "={{ $('Kaniu').item.json.query?.status || '*' }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -208,
        -128
      ],
      "id": "11dcf65d-5f8c-4e21-9f1c-b9c702d99608",
      "name": "Get Animals",
      "notesInFlow": true,
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vfFMnH1cZndqgot0",
          "name": "Viralatinhaz Supabase"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "269a87fc-9513-49ae-9721-d59ad4eb1902",
              "leftValue": "={{ $('Kaniu').item.json.query.animal_id.isEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -672,
        0
      ],
      "id": "eaf3b8e7-60ba-4ea3-b443-eadd13ecb815",
      "name": "List Animals"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "_n8n_animais_dados",
        "filters": {
          "conditions": [
            {
              "keyName": "animal_id",
              "keyValue": "={{ \n  $('Kaniu').item.json.query?.animal_id\n}}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -208,
        128
      ],
      "id": "430c37f2-8b88-4580-b654-56dffcf501b1",
      "name": "Get Details",
      "notesInFlow": true,
      "credentials": {
        "supabaseApi": {
          "id": "vfFMnH1cZndqgot0",
          "name": "Viralatinhaz Supabase"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        848,
        -16
      ],
      "id": "47fd3292-8654-4c65-be72-22bd7969fd74",
      "name": "Respond"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "nome"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        208,
        -32
      ],
      "id": "96ebd0e0-e414-4c15-891b-07d1df61d6d2",
      "name": "Sort",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fbd341f6-d387-4a05-b02c-be40b9e12524",
              "leftValue": "={{ $json }}",
              "rightValue": 0,
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        16,
        -128
      ],
      "id": "754adda1-da05-4df1-8946-575b484c7cc2",
      "name": "Empty"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "animals",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        416,
        -32
      ],
      "id": "905ee6c9-b7d0-41c0-8d29-4c7296c89049",
      "name": "Combine"
    },
    {
      "parameters": {
        "jsCode": "const animals = $input.first().json.animals;\nconst filtros = $('Kaniu').item.json.query;\nconst webhook_url = $('Kaniu').first().json.webhookUrl;\nlet cardsHtml = '';\n\n// Função para remover acentos de uma string\nfunction normalizeAccents(str) {\n    if (!str) return '';\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\nif (animals && Array.isArray(animals) && animals.length > 0) {\n    cardsHtml = animals.map(animal => {\n        // Normaliza o nome do animal para remover acentos\n        const normalizedName = normalizeAccents(animal.nome);\n\n        // Exibe os dados, exceto album, canil e animal_id\n        return `\n            <a href=\"/webhook/kaniu?animal_id=${animal.animal_id}\" class=\"animal-list-link\">\n                <div class=\"animal-strip\">\n                    <div class=\"animal-photo-list-container\">\n                        <img class=\"animal-photo-list\" src=\"${animal.foto}\" alt=\"Foto de ${normalizedName}\"/>\n                    </div>\n                    <div class=\"list-content\">\n                        <h3>${normalizedName}</h3>\n                        <div class=\"characteristics-container\">\n                            <span class=\"characteristic-box\">${animal.especie}</span>\n                            <span class=\"characteristic-box\">${animal.sexo}</span>\n                            <span class=\"characteristic-box\">${animal.faixa_etaria}</span>\n                            <span class=\"characteristic-box\">${animal.porte}</span>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        `;\n    }).join('');\n} else {\n    cardsHtml = '<p class=\"text-red-500 text-center\">Nenhum animal encontrado para adoção no momento.</p>';\n}\n\nconst html = `\n    <!DOCTYPE html>\n    <html lang=\"pt-br\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Animais para Adoção</title>\n        <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n            \n            @font-face {\n                font-family: 'GoodDog';\n                src: url('https://raw.githubusercontent.com/viralatinhaz/kaniu/main/GoodDog.TTF') format('truetype');\n                font-weight: normal;\n                font-style: normal;\n            }\n            \n            :root {\n                --primary-color: #5A5D7F;\n                --secondary-color: #ff6600;\n                --background-light: #F4F6F9;\n                --card-background: #FFFFFF;\n                --text-dark: #333333;\n                --text-light: #666666;\n            }\n            body {\n                font-family: 'Poppins', sans-serif;\n                margin: 0;\n                padding-top: 60px;\n                background-color: var(--background-light);\n                color: var(--text-dark);\n            }\n            .header {\n                width: 100%;\n                padding: 10px 20px;\n                background-color: var(--card-background);\n                box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);\n                display: flex;\n                align-items: center;\n                box-sizing: border-box;\n                flex-shrink: 0;\n            \n                /* NOVO: torna o header fixo */\n                position: fixed;\n                top: 0;\n                left: 0;\n                z-index: 1000;\n            }\n            \n            .header-content {\n                display: flex;\n                align-items: center;\n                gap: 10px;\n                width: 100%;\n            }\n            \n            .header-logo {\n                height: 40px;\n                width: 40px;\n            }\n            \n            .header-title {\n                font-family: 'GoodDog', sans-serif;\n                font-size: 1.8rem;\n                color: var(--primary-color);\n                margin: 0;\n            }\n            \n            .filter-container {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 10px;\n                align-items: center;\n            }\n            \n            .status-filter-btn {\n                cursor: pointer;\n                background-color: #f0f2f5;\n                color: var(--text-dark);\n                padding: 8px 16px;\n                border-radius: 8px;\n                font-size: 0.9rem;\n                font-weight: 500;\n                border: none;\n                transition: background-color 0.2s ease, color 0.2s ease;\n            }\n            \n            .status-filter-btn:hover {\n                background-color: #e2e4e7;\n            }\n            \n            .status-filter-btn.active {\n                background-color: var(--primary-color);\n                color: #FFFFFF;\n            }\n            .filter-container {\n                display: flex;\n                flex-wrap: wrap;\n                justify-content: flex-end;\n                align-items: center;\n                flex-grow: 1;\n                gap: 10px;\n            }\n            .status-filter-btn {\n                cursor: pointer;\n                background-color: #f0f2f5;\n                color: var(--text-dark);\n                padding: 8px 16px; /* Aumentei o padding */\n                border-radius: 8px;\n                font-size: 0.9rem; /* Aumentei a fonte */\n                font-weight: 500;\n                border: none;\n                transition: background-color 0.2s ease, color 0.2s ease;\n            }\n            .status-filter-btn:hover {\n                background-color: #e2e4e7;\n            }\n            .status-filter-btn.active {\n                background-color: var(--primary-color);\n                color: #FFFFFF;\n            }\n            .main-container {\n                max-width: 1400px;\n                width: 95%;\n                margin: 20px auto;\n                padding: 10px;\n            }\n            .list-container {\n              display: grid;\n                display: grid;\n                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* ajusta responsivo */\n                justify-content: center; /* centraliza os itens */\n                gap: 10px; /* espaçamento entre os itens */\n            }\n            .animal-list-link {\n                text-decoration: none;\n                color: inherit;\n                display: block;\n                max-width: 400px; /* limite de largura */\n                width: 100%;\n                margin: 0 auto; /* centraliza dentro da coluna */\n            }\n            .animal-strip {\n                background-color: #fff;\n                border-radius: 10px;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n                display: flex;\n                align-items: flex-start;\n                overflow: hidden;\n                transition: transform 0.2s ease, box-shadow 0.2s ease;\n            }\n            .animal-strip:hover {\n                transform: translateY(-3px);\n                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);\n            }\n            .animal-photo-list-container {\n                width: 100px;\n                height: 100px;\n                flex-shrink: 0;\n                padding: 10px; /* margem interna entre borda e foto */\n                box-sizing: border-box; /* garante que continue com 100x100 */\n            }\n            .animal-photo-list {\n                width: 100%;\n                height: 100%;\n                object-fit: cover;\n                border-radius: 8px; /* opcional, se quiser deixar arredondado */\n            }\n            .list-content {\n                padding: 15px 10px;\n                flex-grow: 1;\n            }\n            .list-content h3 {\n                margin: 0 0 10px;\n                font-family: 'GoodDog', sans-serif;\n                font-size: 1.5rem;\n                font-weight: 600;\n                color: var(--primary-color);\n            }\n            .characteristics-container {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 8px;\n            }\n            .characteristic-box {\n                background-color: var(--background-light);\n                color: var(--text-light);\n                padding: 4px 10px;\n                border-radius: 6px;\n                font-size: 0.8rem;\n                font-weight: 500;\n                white-space: nowrap;\n            }\n        </style>\n    </head>\n    <body>\n        <div class=\"header\">\n            <div class=\"header-content\" style=\"justify-content: space-between; width: 100%;\">\n                <div style=\"display: flex; align-items: center; gap: 10px;\">\n                    <img class=\"header-logo\" src=\"https://raw.githubusercontent.com/viralatinhaz/kaniu/main/Logo%20Viralatinhaz.png\" alt=\"Logo Kaniu\"/>\n                    <h1 class=\"header-title\">Kaniu</h1>\n                </div>\n                <div class=\"filter-container\">\n                    <button class=\"status-filter-btn\" data-status=\"Abrigado\">Abrigados</button>\n                    <button class=\"status-filter-btn\" data-status=\"Adotado\">Adotados</button>\n                    <button class=\"status-filter-btn\" data-status=\"Internado\">Internados</button>\n                    <button class=\"status-filter-btn\" data-status=\"Desaparecido\">Desaparecidos</button>\n                    <button class=\"status-filter-btn\" data-status=\"Falecido\">Falecidos</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"main-container\">\n            <div class=\"list-container\">\n                ${cardsHtml}\n            </div>\n        </div>\n\n        <script>\n            const ENDPOINT_URL = '${webhook_url}';\n            const urlParams = new URLSearchParams(window.location.search);\n            const currentStatus = urlParams.get('status');\n\n            const statusButtons = document.querySelectorAll('.status-filter-btn');\n\n            // Função para aplicar o estilo ativo ao botão com base na URL\n            function updateButtonStatus() {\n                statusButtons.forEach(button => {\n                    if (button.getAttribute('data-status') === currentStatus) {\n                        button.classList.add('active');\n                    } else {\n                        button.classList.remove('active');\n                    }\n                });\n            }\n\n            // Chama a função ao carregar a página para definir o estado inicial\n            updateButtonStatus();\n\n            statusButtons.forEach(button => {\n                button.addEventListener('click', () => {\n                    const statusToFilter = button.getAttribute('data-status');\n                    let newUrl;\n                    \n                    if (statusToFilter === currentStatus) {\n                        // Limpa o filtro se o mesmo botão for clicado novamente\n                        newUrl = ENDPOINT_URL;\n                    } else {\n                        // Aplica o novo filtro\n                        newUrl = \\`\\${ENDPOINT_URL}?status=\\${statusToFilter}\\`;\n                    }\n                    window.location.href = newUrl;\n                });\n            });\n        </script>\n    </body>\n    </html>\n`;\n\nreturn [{ json: { html: html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        -144
      ],
      "id": "eb5ea5b4-40c0-4004-b25c-77251433a4f6",
      "name": "Animals List Page"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fadb7979-539b-42f0-882d-dec4507354b3",
              "name": "status",
              "value": "={{ \n  [ \n    'Abrigado', \n    'Adotado', \n    'Internado', \n    'Desaparecido', \n    'Falecido'\n  ] \n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -416,
        -128
      ],
      "id": "df13c5c6-b8b6-490c-aa7d-cacd4aeecf3b",
      "name": "Animal Statuses"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "95nGT6iUl9eJEgUA",
          "mode": "list",
          "cachedResultName": "Kaniu Tables"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {}
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -416,
        128
      ],
      "id": "956d7892-598f-4759-baa9-78f4457af9e0",
      "name": "Tables"
    },
    {
      "parameters": {
        "jsCode": "// Códogo do nó que gera a página principal do aplicativo Kaniu\nconst animal = $('Get Details').first().json;\nconst especies = JSON.stringify($('Tables').first().json.especies);\nconst racas = JSON.stringify($('Tables').first().json.racas);\nconst generos = JSON.stringify($('Tables').first().json.generos);\nconst portes = JSON.stringify($('Tables').first().json.portes);\nconst cores = JSON.stringify($('Tables').first().json.cores);\nconst pelagens = JSON.stringify($('Tables').first().json.pelagens);\n\n// Códogo para obter as partes do código da página\nconst codigo = $('Estilo').first().json;\n\n// Função para converter boolean para \"Sim\" ou \"Não\"\nconst formatBoolean = (value) => value ? 'Sim' : 'Não';\n// Função para checar por valores nulos ou 0\nconst formatValue = (value) => value === null || value === 0 || value === undefined ? '' : value;\n\n// Função para calcular idade completa em anos, meses e dias\nconst calculateAge = (birthDate) => {\n    const today = new Date();\n    const dob = new Date(birthDate);\n\n    let years = today.getFullYear() - dob.getFullYear();\n    let months = today.getMonth() - dob.getMonth();\n    let days = today.getDate() - dob.getDate();\n\n    if (days < 0) {\n        months--;\n        const prevMonth = new Date(today.getFullYear(), today.getMonth(), 0);\n        days = today.getDate() + (prevMonth.getDate() - dob.getDate());\n    }\n\n    if (months < 0) {\n        years--;\n        months = 12 + months;\n    }\n\n    let txt_anos = years == 0 ? '' : years == 1 ? '1 ano' : years + ' anos';\n    let txt_meses = months == 0 ? '' : months == 1 ? '1 mês' : months + ' meses';\n    let txt_e = (txt_anos == '' || txt_meses == '') ? '' : ' e ';\n\n    return `${txt_anos}${txt_e}${txt_meses}`;\n};\n\nconst ageString = calculateAge(animal.nascimento);\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Adote ${animal.nome}'+</title>\n</head>\n${codigo.style}\n<body>\n    <header class=\"header\">\n        <div class=\"header-content\">\n            <img class=\"header-logo\" src=\"https://raw.githubusercontent.com/viralatinhaz/kaniu/main/Logo%20Viralatinhaz.png\" alt=\"Logo Kaniu\"/>\n            <h1 class=\"header-title\">Kaniu</h1>\n        </div>\n    </header>\n    <div class=\"main-content\">\n        <div class=\"animal-details-frame\">\n            <a href=\"javascript:history.back()\" class=\"back-button\">Voltar</a>\n            <div class=\"content-wrapper\">\n                <div class=\"animal-photo-container\">\n                    <img class=\"animal-photo\" src=\"${animal.foto}\" alt=\"Foto de ${animal.nome}\"/>\n                </div>\n                <div class=\"text-content\">\n                    <div class=\"animal-header\">\n                        <h1>${animal.nome}</h1>\n                    </div>\n                    <div class=\"button-container\">\n                        <div class=\"img-button-wrapper\">\n                            <img class=\"img-button\" src=\"https://i.ibb.co/3msCK8hT/castrado.png\" alt=\"Ícone de castrado\"/>\n                            <span class=\"tooltip\">Castrado</span>\n                        </div>\n                        <div class=\"img-button-wrapper\">\n                            <img class=\"img-button\" src=\"https://i.ibb.co/qMzYNXZP/syringe.png\" alt=\"Ícone de vacina\"/>\n                            <span class=\"tooltip\">Vacinado</span>\n                        </div>\n                        <div class=\"img-button-wrapper\">\n                            <img class=\"img-button\" src=\"https://i.ibb.co/MxGdxkyW/pill.png\" alt=\"Ícone de vermífugo\"/>\n                            <span class=\"tooltip\">Vermifugado</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"details-container\">\n                <div class=\"details-grid\">\n                  <div class=\"detail-item\">\n                      <strong>Espécie:</strong>\n                      <button class=\"detail-button\" id=\"open-especie-menu\">${animal.especie}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Raça:</strong>\n                      <button class=\"detail-button\" id=\"open-raca-menu\">${animal.raça}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Gênero:</strong>\n                      <button class=\"detail-button\" id=\"open-genero-menu\">${animal.sexo}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Porte:</strong>\n                      <button class=\"detail-button\" id=\"open-porte-menu\">${animal.porte}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Cor:</strong>\n                      <button class=\"detail-button\" id=\"open-cor-menu\">${animal.cor}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Pelagem:</strong>\n                      <button class=\"detail-button\" id=\"open-pelagem-menu\">${animal.pelagem}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Data de Nascimento:</strong>\n                      <button id=\"open-nascimento-menu\" class=\"detail-button\">${animal.nascimento ? animal.nascimento : 'Definir Data'}</button>\n                  </div>\n                  <div class=\"detail-item\"><strong>Faixa Etária:</strong> <span class=\"characteristic-box\">${animal.faixa_etaria}</span></div>\n                  <div class=\"detail-item\"><strong>Idade:</strong> <span class=\"characteristic-box\">${ageString}</span></div>\n                  <div class=\"detail-item\"><strong>Peso:</strong> <span class=\"characteristic-box\">${formatValue(animal.peso)} kg</span></div>\n                  <div class=\"detail-item\"><strong>Altura:</strong> <span class=\"characteristic-box\">${formatValue(animal.altura)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Comprimento:</strong> <span class=\"characteristic-box\">${formatValue(animal.comprimento)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Tórax:</strong> <span class=\"characteristic-box\">${formatValue(animal.torax)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Pescoço:</strong> <span class=\"characteristic-box\">${formatValue(animal.pescoço)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Castrado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.castrado)}</span></div>\n                  <div class=\"detail-item\"><strong>Vacinado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.vacinado)}</span></div>\n                  <div class=\"detail-item\"><strong>Vermifugado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.vermifugado)}</span></div>\n                  <div class=\"detail-item\"><strong>Desparasitado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.desparasitado)}</span></div>\n              </div>\n            </div>\n        </div>\n\n        <div class=\"tab-container\">\n            <div class=\"tab-nav\">\n                <button class=\"tab-btn active\" data-tab=\"resumo\">Resumo</button>\n                <button class=\"tab-btn\" data-tab=\"eventos\">Histórico</button>\n                <button class=\"tab-btn\" data-tab=\"avaliacoes\">Avaliação</button>\n                <button class=\"tab-btn\" data-tab=\"pesagens\">Pesagem</button>\n                <button class=\"tab-btn\" data-tab=\"imunizacoes\">Imunização</button>\n                <button class=\"tab-btn\" data-tab=\"tratamentos\">Tratamento</button>\n                <button class=\"tab-btn\" data-tab=\"arquivos\">Arquivos</button>\n            </div>\n\n            <div class=\"tab-content-area\">\n                <div id=\"tab-resumo\" class=\"tab-content active\">\n                    <p>Aqui você poderá ver um resumo do histórico do animal.</p>\n                </div>\n                <div id=\"tab-eventos\" class=\"tab-content\"></div>\n                <div id=\"tab-avaliacoes\" class=\"tab-content\"></div>\n                <div id=\"tab-pesagens\" class=\"tab-content\"></div>\n                <div id=\"tab-imunizacoes\" class=\"tab-content\"></div>\n                <div id=\"tab-tratamentos\" class=\"tab-content\"></div>\n                <div id=\"tab-arquivos\" class=\"tab-content\"></div>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"overlay\" class=\"overlay\"></div>\n    <div id=\"pop-up-menu\" class=\"pop-up-menu\">\n        <span class=\"pop-up-close\" onclick=\"closeMenu()\">&times;</span>\n        <h2>Selecione a Espécie</h2>\n        <div id=\"pop-up-options-container\" class=\"pop-up-options-container\">\n        </div>\n    </div>\n\n    <div id=\"pop-up-nascimento\" class=\"pop-up small-pop-up\">\n        <h2>Alterar Data de Nascimento</h2>\n        <div class=\"pop-up-content\">\n            <input type=\"date\" id=\"nascimento-input\" class=\"date-input\" />\n        </div>\n        <div class=\"pop-up-actions\">\n            <button id=\"confirm-nascimento\" class=\"popup-button\">Salvar</button>\n            <button id=\"cancel-nascimento\" class=\"popup-button\">Cancelar</button>\n        </div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns\"></script>\n    <script>\n        const cachedData = {};\n\n        async function fetchTabData(tabId) {\n            if (cachedData[tabId]) {\n                return;\n            }\n\n            const tabContentElement = document.getElementById('tab-' + tabId);\n            tabContentElement.innerHTML = '<div class=\"loading-message\">Carregando...</div>';\n\n            try {\n                const payload = {\n                    tab_name: tabId,\n                    animal_id: '${animal.animal_id}'\n                };\n\n                const response = await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu-animal-dados\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(payload)\n                });\n                \n                if (!response.ok) {\n                    throw new Error('Erro na resposta da rede: ' + response.statusText);\n                }\n\n                const data = await response.json();\n                \n                // Trata a resposta do endpoint que agora retorna JSON com 'items' ou 'error'\n                if (data.error) {\n                    tabContentElement.innerHTML = '<div class=\"no-data-message\">' + data.error + '</div>';\n                } else if (data.items) {\n                    // Mapeamento de chaves para títulos de coluna amigáveis\n                    const columnMappings = {\n                        'eventos': {\n                            'data': 'Data', 'tipo': 'Tipo', 'descricao': 'Descrição', 'veterinario_nome': 'Veterinário'\n                        },\n                        'pesagens': {\n                            'data': 'Data', 'peso': 'Medição', 'variacao': 'Variação'\n                        },\n                        'avaliacoes': {\n                            'data': 'Data', 'observacao': 'Observação', 'veterinario_nome': 'Veterinário', 'temperatura': 'Temp.', 'score': 'Score', 'peso': 'Peso', 'nota': 'Nota'\n                        },\n                        'imunizacoes': {\n                            'data_exibicao': 'Data', 'tipo': 'Tipo', 'nome_imunizante': 'Imunizante', 'veterinario_nome': 'Veterinário', 'aplicada': 'Aplicada'\n                        },\n                        'tratamentos': {\n                            'data': 'Data', 'veterinario_nome': 'Veterinário', 'medicamentos': 'Medicamentos', 'finalizada': 'Finalizado'\n                        },\n                        'arquivos': {\n                            'data': 'Data', 'nome': 'Nome', 'observacao': 'Observação', 'url': 'Visualizar'\n                        }\n                    };\n\n                    const excludedKeys = ['id', 'animal_id', 'veterinario_id', 'concluido', 'programado', 'atrasado'];\n\n                    // Função para renderizar a tabela\n                    const renderTable = (items, tabId) => {\n                        const currentMapping = columnMappings[tabId] || {};\n                        const headers = Object.keys(items[0]).filter(key => !excludedKeys.includes(key));\n                        \n                        let tableHTML = '<table class=\"tab-table\"><thead><tr>';\n                        \n                        headers.forEach(header => {\n                            const title = currentMapping[header] || header.charAt(0).toUpperCase() + header.slice(1);\n                            tableHTML += '<th>' + title + '</th>';\n                        });\n                        \n                        tableHTML += '</tr></thead><tbody>';\n\n                        items.forEach(item => {\n                            tableHTML += '<tr>';\n                            headers.forEach(header => {\n                                let formattedContent = '';\n                                const cellContent = item[header];\n                                console.log(cellContent);\n\n                                if (['data', 'data_exibicao'].includes(header) && cellContent) {\n                                    const [year, month, day] = cellContent.split('-');\n                                    formattedContent = day+'/'+month+'/'+year;\n                                } else if (header === 'peso' && cellContent !== null) {\n                                    formattedContent = cellContent+' kg';\n                                } else if (header === 'medicamentos' && Array.isArray(cellContent)) {\n                                    formattedContent = '<ul>'+cellContent.map(med => '<li>'+med+'</li>').join('')+'</ul>';\n                                } else if (header === 'url' && cellContent) {\n                                    formattedContent = '<a href=\"'+cellContent+'\" target=\"_blank\">Visualizar</a>';\n                                } else if (typeof cellContent === 'boolean') {\n                                    formattedContent = cellContent ? 'Sim' : 'Não';\n                                } else {\n                                    formattedContent = cellContent || '';\n                                }\n                                tableHTML += '<td>'+formattedContent+'</td>';\n                            });\n                            tableHTML += '</tr>';\n                        });\n\n                        tableHTML += '</tbody></table>';\n                        return tableHTML;\n                    };\n                    \n                    tabContentElement.innerHTML = renderTable(data.items, tabId);\n\n                    // Se for a guia de pesagens, renderiza o gráfico\n                    if (tabId === 'pesagens' && data.chartData) {\n                        tabContentElement.innerHTML += '<div class=\"chart-container\"><canvas id=\"weightChart\"></canvas></div>';\n                        renderChart(data.chartData);\n                    }\n                    \n                    cachedData[tabId] = true;\n                }\n\n            } catch (error) {\n                console.error('Erro ao buscar dados da guia:', error);\n                tabContentElement.innerHTML = '<div class=\"error-message\">Ocorreu um erro ao carregar os dados.</div>';\n            }\n        }\n\nfunction renderChart(chartData) {\n    // Converte dados do backend em pontos {x,y}\n    const dataPoints = chartData.map(item => ({\n        x: new Date(item.data),\n        y: item.peso\n    }));\n\n    const maxWeight = Math.max(...dataPoints.map(p => p.y));\n    const maxYValue = Math.ceil(maxWeight / 10) * 10;\n\n    const ctx = document.getElementById('weightChart').getContext('2d');\n\n    // pega primeira e última data reais do dataset\n    const dates = chartData.map(item => new Date(item.data));\n    const minDate = new Date(Math.min(...dates));\n    const today = new Date();\n\n    // adiciona margem de 15 dias antes da primeira data\n    const paddedMinDate = new Date(minDate);\n    paddedMinDate.setDate(minDate.getDate() - 15);\n\nnew Chart(ctx, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Peso',\n            data: dataPoints,\n            borderColor: '#4A90E2',\n            backgroundColor: 'rgba(74, 144, 226, 0.2)',\n            fill: true,\n            tension: 0.3,\n            pointRadius: 3\n        }]\n    },\n    options: {\n        responsive: true,\n        scales: {\n            x: {\n                type: 'time',\n                time: {\n                    unit: 'month',\n                    displayFormats: {\n                        month: 'MMM yy' // Exibe Jan 23, Fev 23, etc.\n                    }\n                },\n                ticks: {\n                    callback: function(value, index, ticks) {\n                        const date = new Date(value);\n                        // Verifica se é o primeiro mês do ano (Janeiro, que é o mês 0)\n                        if (date.getMonth() === 0) {\n                            return date.getFullYear(); // Exibe o ano completo\n                        } else {\n                            // Retorna a primeira letra do mês\n                            const month = date.toLocaleString('pt-BR', { month: 'short' });\n                            return month.charAt(0).toUpperCase();\n                        }\n                    },\n                    autoSkip: true,\n                    maxRotation: 0,\n                    minRotation: 0\n                },\n                min: paddedMinDate,\n                max: today,\n                grid: {\n                    drawTicks: true\n                }\n            },\n            y: {\n                beginAtZero: true,\n                suggestedMax: maxYValue\n            }\n        },\n        plugins: {\n            legend: {\n                display: false\n            }\n        }\n    }\n});\n            \n        }\n\n\n        // Funções para inicializar o sistema de guias, pop-ups e outras funcionalidades\n        function initTabs() {\n            const tabButtons = document.querySelectorAll('.tab-btn');\n            const tabContents = document.querySelectorAll('.tab-content');\n        \n            tabButtons.forEach(button => {\n                button.addEventListener('click', () => {\n                    const tabId = button.getAttribute('data-tab');\n        \n                    tabButtons.forEach(btn => btn.classList.remove('active'));\n                    tabContents.forEach(content => content.classList.remove('active'));\n        \n                    button.classList.add('active');\n                    document.getElementById('tab-' + tabId).classList.add('active');\n        \n                    if (tabId !== 'resumo') {\n                        fetchTabData(tabId);\n                    }\n                });\n            });\n        }\n\n        //const especies = '+${especies};\n        //const racas = '+${racas};\n        //const generos = '+${generos};\n        //const portes = '+${portes};\n        //const cores = '+${cores};\n        //const pelagens = '+${pelagens};\n        \n        let currentButton = null;\n        let currentType = null;\n        \n        function openMenu(data, button, type, labelKey) {\n            currentButton = button;\n            currentType = type;\n        \n            const menu = document.getElementById('pop-up-menu');\n            const overlay = document.getElementById('overlay');\n            const optionsContainer = document.getElementById('pop-up-options-container');\n        \n            menu.querySelector('h2').textContent = \"Selecione \" + type.charAt(0).toUpperCase() + type.slice(1);\n        \n            optionsContainer.innerHTML = '';\n            data.forEach(item => {\n                const option = document.createElement('div');\n                option.classList.add('pop-up-option');\n                option.textContent = item[labelKey];\n                option.setAttribute('data-id', item.id);\n        \n                option.onclick = () => selectOption('${animal.animal_id}', item.id, item[labelKey]);\n                optionsContainer.appendChild(option);\n            });\n        \n            overlay.style.display = 'block';\n            menu.style.display = 'flex';\n        }\n        \n        function closeMenu() {\n            document.getElementById('overlay').style.display = 'none';\n            document.getElementById('pop-up-menu').style.display = 'none';\n        }\n        \n        function selectOption(idAnimal, valueId, valueText) {\n            console.log('selectOption:' + valueId + ' - ' + valueText);\n            if (currentButton && currentType) {\n                updateCharacteristic(idAnimal, currentType, valueId, valueText);\n            }\n            closeMenu();\n        }\n        \n        async function updateCharacteristic(animalId, type, valueId, valueText) {\n            try {\n                let payload = { \n                    animal_id: animalId, \n                    caracteristica: type, \n                    caracteristica_id: valueId, \n                    caracteristica_label: valueText \n                };\n                await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n        \n                currentButton.textContent = valueText;\n                console.log('atualizado com sucesso!');\n            } catch (error) {\n                console.error('Erro ao atualizar ' + type + ':', error);\n            }\n        }\n\n        function initDatePopup() {\n            const nascimentoButton = document.getElementById(\"open-nascimento-menu\");\n            const nascimentoPopup = document.getElementById(\"pop-up-nascimento\");\n            const nascimentoInput = document.getElementById(\"nascimento-input\");\n            const confirmNascimento = document.getElementById(\"confirm-nascimento\");\n            const cancelNascimento = document.getElementById(\"cancel-nascimento\");\n            const overlay = document.getElementById(\"overlay\");\n        \n            nascimentoButton.onclick = function () {\n                if (nascimentoButton.textContent !== \"Definir Data\") {\n                    nascimentoInput.value = nascimentoButton.textContent;\n                } else {\n                    nascimentoInput.value = \"\";\n                }\n                overlay.style.display = \"block\";\n                nascimentoPopup.style.display = \"flex\";\n            };\n        \n            function closeNascimentoPopup() {\n                overlay.style.display = \"none\";\n                nascimentoPopup.style.display = \"none\";\n            }\n        \n            cancelNascimento.onclick = closeNascimentoPopup;\n        \n            confirmNascimento.onclick = async function () {\n                const novaData = nascimentoInput.value;\n                if (!novaData) {\n                    // Substituindo alert por uma mensagem mais elegante, já que alert não funciona em iframes\n                    document.getElementById('pop-up-nascimento').querySelector('.pop-up-nascimento-actions').insertAdjacentHTML('beforebegin', '<p style=\"color:red; text-align:center;\">Selecione uma data válida.</p>');\n                    return;\n                }\n        \n                try {\n                    await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({\n                            animal_id: \"animal.animal_id\",\n                            caracteristica: \"nascimento\",\n                            data_nascimento: novaData\n                        })\n                    });\n        \n                    nascimentoButton.textContent = novaData;\n                    console.log(\"Data de nascimento atualizada com sucesso!\");\n                } catch (error) {\n                    console.error(\"Erro ao atualizar data de nascimento:\", error);\n                }\n        \n                closeNascimentoPopup();\n            };\n        \n            document.addEventListener(\"keydown\", function (event) {\n                if (event.key === \"Escape\" || event.key === \"Esc\") {\n                    closeMenu();\n                    closeNascimentoPopup();\n                }\n            });\n        }\n\n        document.addEventListener('DOMContentLoaded', function() {\n            initTabs();\n            initDatePopup();\n\n            document.getElementById('open-especie-menu').onclick = () =>\n                openMenu(${especies}, document.getElementById('open-especie-menu'), 'especie', 'especie');\n        \n            document.getElementById('open-raca-menu').onclick = () =>\n                openMenu(${racas}, document.getElementById('open-raca-menu'), 'raca', 'raca');\n        \n            document.getElementById('open-genero-menu').onclick = () =>\n                openMenu(${generos}, document.getElementById('open-genero-menu'), 'genero', 'genero');\n        \n            document.getElementById('open-porte-menu').onclick = () =>\n                openMenu(${portes}, document.getElementById('open-porte-menu'), 'porte', 'porte');\n        \n            document.getElementById('open-cor-menu').onclick = () =>\n                openMenu(${cores}, document.getElementById('open-cor-menu'), 'cor', 'cor');\n        \n            document.getElementById('open-pelagem-menu').onclick = () =>\n                openMenu(${pelagens}, document.getElementById('open-pelagem-menu'), 'pelagem', 'pelagem');\n\n            // Carrega a guia de resumo por padrão\n            document.querySelector('[data-tab=\"resumo\"]').click();\n        });\n    </script>\n\n</body>\n</html>\n`;\n\nreturn [{ json: { html: html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        128
      ],
      "id": "8f1c0ddc-1976-4106-ae18-0ce1b52155d4",
      "name": "Details Page"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eebc52eb-77b5-4a72-963c-06cf84c9f1a3",
              "name": "style",
              "value": "=<style>\n    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n    \n    @font-face {\n        font-family: 'GoodDog';\n        src: url('https://raw.githubusercontent.com/viralatinhaz/kaniu/main/GoodDog.TTF') format('truetype');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    :root {\n        --primary-color: #FF6600;\n        --secondary-color: #5A5D7F;\n        --background-light: #F4F6F9;\n        --card-background: #FFFFFF;\n        --text-dark: #333333;\n        --text-light: #666666;\n        --text-faded: #999999;\n        --border-color: #E0E0E0;\n    }\n    \n    body {\n        font-family: 'Poppins', sans-serif;\n        margin: 0;\n        padding: 0;\n        height: 100vh;\n        width: 100vw;\n        display: flex;\n        flex-direction: column;\n        background-color: var(--background-light);\n        color: var(--text-dark);\n        box-sizing: border-box;\n        overflow: hidden;\n    }\n    \n    .header {\n        width: 100%;\n        padding: 10px 20px;\n        background-color: var(--card-background);\n        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);\n        display: flex;\n        align-items: center;\n        box-sizing: border-box;\n        flex-shrink: 0;\n    }\n    \n    .header-content {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        margin-left: 20px;\n    }\n    \n    .header-logo {\n        width: 40px;\n        height: 40px;\n    }\n    \n    .header-title {\n        font-family: 'GoodDog', sans-serif;\n        font-size: 1.8rem;\n        color: var(--primary-color);\n        margin: 0;\n    }\n    \n    .main-content {\n        flex: 1;\n        display: flex;\n        flex-direction: row;\n        gap: 10px;\n        padding: 10px;\n        box-sizing: border-box;\n        height: calc(100% - 60px);\n    }\n    \n    .animal-details-frame {\n        background-color: var(--card-background);\n        border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);\n        width: 400px;\n        display: flex;\n        flex-direction: column;\n        flex-shrink: 0;\n        height: 100%;\n        overflow: hidden;\n        position: relative;\n    }\n    \n    .content-wrapper {\n        display: flex;\n        flex-direction: row;\n        align-items: flex-start;\n        gap: 10px;\n        padding: 20px;\n        flex-shrink: 0;\n        position: relative;\n    }\n    \n    .animal-photo-container {\n        width: 100px;\n        height: 100px;\n        flex-shrink: 0;\n        border-radius: 15px;\n        overflow: hidden;\n        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n    }\n    \n    .animal-photo {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n    \n    .text-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-start;\n        flex: 1;\n        height: 100px;\n    }\n    \n    .animal-header h1 {\n        font-family: 'GoodDog', sans-serif;\n        font-size: 2rem;\n        font-weight: 600;\n        color: var(--secondary-color);\n        margin: 0;\n        text-align: left;\n    }\n    \n    .details-container {\n        overflow-y: auto;\n        flex: 1;\n        padding: 0 10px 10px 10px;\n        scrollbar-width: regular;\n        scrollbar-color: var(--secondary-color) var(--background-light);\n    }\n    \n    .details-container::-webkit-scrollbar {\n        width: 14px;\n    }\n    \n    .details-container::-webkit-scrollbar-track {\n        background: var(--background-light);\n        border-radius: 10px;\n    }\n    \n    .details-container::-webkit-scrollbar-thumb {\n        background-color: var(--secondary-color);\n        border-radius: 10px;\n        border: 4px solid var(--background-light);\n        background-clip: padding-box;\n    }\n    \n    .details-grid {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n        width: 100%;\n        text-align: left;\n    }\n    \n    /* Itens de detalhe em estilo de tabela */\n    .detail-item {\n        background-color: transparent; /* remove o fundo cinza */\n        padding: 12px 15px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        border-bottom: 1px solid var(--border-color); /* linhas finas iguais à tabela */\n        border-radius: 0; /* remove arredondamento */\n    }\n    \n    .detail-item strong {\n        font-size: 0.85rem;\n        color: var(--text-dark);\n    }\n    \n    /* Ajuste para os valores em \"caixinhas\" (characteristic-box) ficarem alinhados */\n    .characteristic-box {\n        background-color: transparent;\n        color: var(--text-light);\n        font-size: 0.8rem;\n        font-weight: 500;\n    }\n    \n    .back-button {\n        position: absolute;\n        top: 15px;\n        right: 15px;\n        background-color: var(--background-light);\n        border: none;\n        color: var(--text-light);\n        padding: 5px 12px;\n        border-radius: 6px;\n        text-decoration: none;\n        font-size: 0.8rem;\n        transition: all 0.2s ease;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n        font-weight: 500;\n        z-index: 10;\n    }\n    \n    .back-button:hover {\n        background-color: var(--primary-color);\n        color: var(--card-background);\n    }\n    \n    /* Botão com fundo cinza claro */\n    .detail-button {\n        display: inline-block;\n        background-color: var(--background-light); /* agora fundo cinza claro */\n        border: none;\n        color: var(--secondary-color);\n        padding: 5px 12px;\n        border-radius: 6px;\n        text-decoration: none;\n        font-size: 0.8rem;\n        transition: all 0.2s ease;\n        box-shadow: none; /* remove sombra para ficar minimalista */\n        font-weight: 500;\n        text-align: center;\n        white-space: nowrap;\n        cursor: pointer;\n    }\n    \n    .detail-button:hover {\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n    }\n\n    .button-container {\n        display: flex;\n        gap: 5px;\n        flex-shrink: 0;\n    }\n\n    .img-button-wrapper {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 32px;\n        height: 32px;\n        border-radius: 8px;\n        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n        transition: all 0.2s ease;\n        cursor: default;\n    }\n\n    .img-button {\n        width: 24px;\n        height: 24px;\n        object-fit: contain;\n    }\n\n    .img-button-wrapper .tooltip {\n        visibility: hidden;\n        width: max-content;\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n        text-align: center;\n        border-radius: 6px;\n        padding: 5px 10px;\n        position: absolute;\n        z-index: 1;\n        bottom: 150%;\n        left: 50%;\n        transform: translateX(-50%);\n        opacity: 0;\n        transition: opacity 0.3s;\n        font-size: 0.75rem;\n        white-space: nowrap;\n    }\n\n    .img-button-wrapper .tooltip::after {\n        content: \"\";\n        position: absolute;\n        top: 100%;\n        left: 50%;\n        margin-left: -5px;\n        border-width: 5px;\n        border-style: solid;\n        border-color: var(--secondary-color) transparent transparent transparent;\n    }\n\n    .img-button-wrapper:hover .tooltip {\n        visibility: visible;\n        opacity: 1;\n    }\n\n    .overlay {\n        /* Mantenha o que já existe e adicione ou modifique o z-index */\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n        backdrop-filter: blur(5px);\n        z-index: 20; /* Z-index do overlay */\n        display: none;\n    }\n    \n    .pop-up-menu {\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background-color: var(--card-background);\n        border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n        padding: 15px;\n        z-index: 30;\n        display: none;\n        flex-direction: column;\n        gap: 10px; \n        max-height: 80vh;\n        overflow-y: auto;\n        width: 300px;\n    }\n    \n    .pop-up-menu h2 {\n        margin: 0 0 5px 0;\n        font-size: 1rem;\n        color: var(--secondary-color);\n        text-align: center;\n    }\n    \n    .pop-up-options-container {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n    }\n    \n    .pop-up-option {\n        padding: 8px 12px;\n        background-color: var(--background-light);\n        border-radius: 6px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-weight: 500;\n        font-size: 0.8rem;\n    }\n    \n    .pop-up-option:hover {\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n    }\n    \n    .pop-up-option.selected {\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n    }\n    \n    .pop-up-close {\n        position: absolute;\n        top: 5px;\n        right: 10px;\n        font-size: 1.2rem;\n        cursor: pointer;\n        color: var(--text-faded);\n    }\n    \n    .date-input {\n      padding: 10px 15px;\n      border-radius: 6px;\n      border: 1px solid #ccc;\n      width: 100%;\n      box-sizing: border-box;\n      font-size: 14px;\n    }\n    \n    .pop-up-actions {\n      display: flex;\n      justify-content: center;\n      gap: 15px;\n      margin-top: 10px;\n      flex-wrap: wrap;\n    }\n    \n    .confirm-button,\n    .cancel-button {\n      padding: 10px 20px;\n      border-radius: 6px;\n      border: none;\n      cursor: pointer;\n      flex: 1;\n      max-width: 120px;\n    }\n    \n    .confirm-button {\n      background-color: #4CAF50;\n      color: #fff;\n    }\n    \n    .cancel-button {\n      background-color: #ccc;\n    }\n\n    .small-pop-up {\n      min-height: auto;\n      padding: 16px;\n      gap: 12px;\n      flex-direction: column;\n      justify-content: flex-start;\n    }\n\n    .small-pop-up h2 {\n      font-size: 16px;\n      margin-bottom: 12px;\n    }\n\n    .pop-up-content {\n      margin-bottom: 16px;\n    }\n\n    .popup-button {\n      background-color: #f0f0f0;\n      border: 1px solid #ccc;\n      border-radius: 8px;\n      padding: 6px 14px;\n      cursor: pointer;\n      font-size: 14px;\n      transition: background 0.2s;\n    }\n\n    .popup-button:hover {\n      background-color: #e0e0e0;\n    }\n\n    #pop-up-nascimento {\n        /* Mantenha o que já existe e adicione ou modifique o z-index */\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background-color: var(--card-background);\n        border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n        padding: 15px;\n        z-index: 30; /* Z-index do pop-up. Ajustado para ser maior que o overlay */\n        display: none;\n        flex-direction: column;\n        gap: 10px;\n        width: 280px;\n    }\n\n    /* Sistema de Guias */\n    .tab-container {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        background-color: var(--background-light);\n        border-radius: 10px;\n        overflow: hidden;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);\n        flex: 1;\n    }\n\n    .tab-nav {\n        display: flex;\n        background-color: var(--background-light);\n        border-bottom: 2px solid var(--border-color);\n        padding: 0;\n        margin: 0;\n        flex-shrink: 0;\n        overflow-x: auto;\n        scrollbar-width: none;\n        -ms-overflow-style: none;\n    }\n\n    .tab-nav::-webkit-scrollbar {\n        display: none;\n    }\n\n    .tab-btn {\n        flex: 1;\n        min-width: 80px;\n        padding: 15px 20px;\n        background-color: transparent;\n        border: none;\n        border-bottom: 3px solid transparent;\n        color: var(--text-light);\n        font-size: 0.8rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        white-space: nowrap;\n        position: relative;\n        text-align: center;\n    }\n\n    .tab-btn:hover {\n        background-color: rgba(255, 255, 255, 0.5);\n        color: var(--secondary-color);\n    }\n\n    .tab-btn.active {\n        background-color: var(--card-background);\n        color: var(--secondary-color);\n        border-bottom-color: var(--primary-color);\n        font-weight: 600;\n    }\n\n    .tab-content-area {\n        flex: 1;\n        background-color: var(--card-background);\n        overflow: hidden;\n        position: relative;\n        font-size: 0.7rem;\n    }\n\n    .tab-content {\n        display: none;\n        height: 100%;\n        padding: 20px;\n        overflow-y: auto;\n        box-sizing: border-box;\n    }\n\n    .tab-content.active {\n        display: block;\n    }\n\n    .tab-content::-webkit-scrollbar {\n        width: 8px;\n    }\n\n    .tab-content::-webkit-scrollbar-track {\n        background: var(--background-light);\n        border-radius: 4px;\n    }\n\n    .tab-content::-webkit-scrollbar-thumb {\n        background-color: var(--text-faded);\n        border-radius: 4px;\n    }\n\n    .tab-content::-webkit-scrollbar-thumb:hover {\n        background-color: var(--secondary-color);\n    }\n\n    .tab-table {\n        width: 100%;\n        border-collapse: collapse;\n        font-size: 0.75rem;\n        margin-top: 10px;\n    }\n\n    .tab-table th,\n    .tab-table td {\n        padding: 12px 15px;\n        text-align: left;\n        border-bottom: 1px solid var(--border-color);\n    }\n\n    .tab-table th {\n        background-color: var(--background-light);\n        font-weight: 600;\n        color: var(--text-dark);\n        position: sticky;\n        top: 0;\n        z-index: 1;\n    }\n\n    .tab-table td {\n        color: var(--text-light);\n    }\n\n    .tab-table tbody tr:hover {\n        background-color: rgba(90, 93, 127, 0.03);\n    }\n\n    /* Estilos para o Timeline (Resumo) */\n    .timeline-container {\n        padding: 20px;\n    }\n\n    .timeline-header {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n        margin-bottom: 15px;\n        padding: 0 15px;\n    }\n\n    .timeline-column-title {\n        flex: 1;\n        font-weight: 600;\n        color: var(--secondary-color);\n        text-align: center;\n    }\n\n    .timeline-column-title.date-column {\n        min-width: 100px;\n        text-align: left;\n    }\n\n    .timeline-grid {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n\n    .timeline-item {\n        background-color: var(--background-light);\n        padding: 10px 15px;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        gap: 15px;\n    }\n\n    .timeline-item strong {\n        min-width: 100px;\n        color: var(--text-dark);\n        font-weight: 500;\n    }\n\n    .timeline-box {\n        flex: 1;\n        background-color: var(--card-background);\n        color: var(--text-light);\n        padding: 6px 10px;\n        border-radius: 6px;\n        font-weight: 500;\n        text-align: center;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    /* Estilos para o Resumo (mantidos para outras seções se necessário) */\n    .resume-sections {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 30px;\n        padding: 10px;\n    }\n\n    .resume-section {\n        margin-bottom: 0;\n    }\n\n    .resume-title {\n        color: var(--secondary-color);\n        font-weight: 600;\n        margin: 0 0 15px 0;\n        padding-bottom: 8px;\n        border-bottom: 2px solid var(--background-light);\n    }\n\n    .resume-list {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n\n    .resume-item {\n        background-color: var(--background-light);\n        padding: 10px 15px;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    .resume-item strong {\n        font-size: 0.85rem;\n        color: var(--text-dark);\n        font-weight: 500;\n    }\n\n    .resume-value {\n        background-color: var(--card-background);\n        color: var(--text-light);\n        padding: 4px 10px;\n        border-radius: 6px;\n        font-size: 0.8rem;\n        font-weight: 500;\n        white-space: nowrap;\n    }\n\n    .content-section {\n        margin-bottom: 20px;\n    }\n\n    .content-section h3 {\n        color: var(--secondary-color);\n        margin-bottom: 10px;\n    }\n\n    .content-section p {\n        color: var(--text-light);\n        line-height: 1.6;\n    }\n\n    @media (max-width: 768px) {\n        .timeline-header {\n            display: none; /* Oculta cabeçalho em telas pequenas */\n        }\n\n        .timeline-item {\n            flex-direction: column;\n            align-items: stretch;\n            gap: 8px;\n        }\n\n        .timeline-item strong {\n            min-width: auto;\n            text-align: center;\n            background-color: var(--secondary-color);\n            color: var(--card-background);\n            padding: 6px 10px;\n            border-radius: 6px;\n        }\n\n        .timeline-box {\n            text-align: left;\n        }\n\n        .resume-sections {\n            grid-template-columns: 1fr;\n            gap: 20px;\n        }\n        \n        .tab-btn {\n            min-width: 70px;\n            padding: 12px 15px;\n            font-size: 0.8rem;\n        }\n        \n        .tab-content {\n            padding: 15px;\n        }\n    }\n\n    @media (max-width: 480px) {\n        .main-content {\n            flex-direction: column;\n        }\n        .animal-details-frame {\n            width: 100%;\n            height: auto;\n        }\n        .content-wrapper {\n            height: auto;\n        }\n        .text-content {\n            height: auto;\n        }\n        .pop-up-menu {\n            width: 85%;\n        }\n        .tab-btn {\n            min-width: 60px;\n            padding: 10px 12px;\n            font-size: 0.75rem;\n        }\n        .tab-content {\n            padding: 10px;\n        }\n    }\n\n.chart-container {\n    position: relative;\n    width: 100%;\n    max-height: 500px;\n    margin-top: 2rem;\n    \n    /* Adicione estas linhas */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n</style>\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        16,
        128
      ],
      "id": "4ff371ed-0e26-4549-8ebc-5243194a48f3",
      "name": "Estilo"
    },
    {
      "parameters": {
        "jsCode": "// Códogo do nó que gera a página principal do aplicativo Kaniu\nconst animal = $('Get Details').first().json;\nconst especies = JSON.stringify($('Tables').first().json.especies);\nconst racas = JSON.stringify($('Tables').first().json.racas);\nconst generos = JSON.stringify($('Tables').first().json.generos);\nconst portes = JSON.stringify($('Tables').first().json.portes);\nconst cores = JSON.stringify($('Tables').first().json.cores);\nconst pelagens = JSON.stringify($('Tables').first().json.pelagens);\n\n// Códogo para obter as partes do código da página\nconst codigo = $('Estilo').first().json;\n\n// Função para converter boolean para \"Sim\" ou \"Não\"\nconst formatBoolean = (value) => value ? 'Sim' : 'Não';\n// Função para checar por valores nulos ou 0\nconst formatValue = (value) => value === null || value === 0 || value === undefined ? '' : value;\n\n// Função para calcular idade completa em anos, meses e dias\nconst calculateAge = (birthDate) => {\n    const today = new Date();\n    const dob = new Date(birthDate);\n\n    let years = today.getFullYear() - dob.getFullYear();\n    let months = today.getMonth() - dob.getMonth();\n    let days = today.getDate() - dob.getDate();\n\n    if (days < 0) {\n        months--;\n        const prevMonth = new Date(today.getFullYear(), today.getMonth(), 0);\n        days = today.getDate() + (prevMonth.getDate() - dob.getDate());\n    }\n\n    if (months < 0) {\n        years--;\n        months = 12 + months;\n    }\n\n    let txt_anos = years == 0 ? '' : years == 1 ? '1 ano' : years + ' anos';\n    let txt_meses = months == 0 ? '' : months == 1 ? '1 mês' : months + ' meses';\n    let txt_e = (txt_anos == '' || txt_meses == '') ? '' : ' e ';\n\n    return `${txt_anos}${txt_e}${txt_meses}`;\n};\n\nconst ageString = calculateAge(animal.nascimento);\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Adote ${animal.nome}'+</title>\n</head>\n${codigo.style}\n<body>\n    <header class=\"header\">\n        <div class=\"header-content\">\n            <img class=\"header-logo\" src=\"https://raw.githubusercontent.com/viralatinhaz/kaniu/main/Logo%20Viralatinhaz.png\" alt=\"Logo Kaniu\"/>\n            <h1 class=\"header-title\">Kaniu</h1>\n        </div>\n    </header>\n    <div class=\"main-content\">\n        <div class=\"animal-details-frame\">\n            <a href=\"javascript:history.back()\" class=\"back-button\">Voltar</a>\n            <div class=\"content-wrapper\">\n                <div class=\"animal-photo-container\">\n                    <img class=\"animal-photo\" src=\"${animal.foto}\" alt=\"Foto de ${animal.nome}\"/>\n                </div>\n                <div class=\"text-content\">\n                    <div class=\"animal-header\">\n                        <h1>${animal.nome}</h1>\n                    </div>\n                    <div class=\"button-container\">\n                        <div class=\"img-button-wrapper\">\n                            <img class=\"img-button\" src=\"https://i.ibb.co/3msCK8hT/castrado.png\" alt=\"Ícone de castrado\"/>\n                            <span class=\"tooltip\">Castrado</span>\n                        </div>\n                        <div class=\"img-button-wrapper\">\n                            <img class=\"img-button\" src=\"https://i.ibb.co/qMzYNXZP/syringe.png\" alt=\"Ícone de vacina\"/>\n                            <span class=\"tooltip\">Vacinado</span>\n                        </div>\n                        <div class=\"img-button-wrapper\">\n                            <img class=\"img-button\" src=\"https://i.ibb.co/MxGdxkyW/pill.png\" alt=\"Ícone de vermífugo\"/>\n                            <span class=\"tooltip\">Vermifugado</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"details-container\">\n                <div class=\"details-grid\">\n                  <div class=\"detail-item\">\n                      <strong>Espécie:</strong>\n                      <button class=\"detail-button\" id=\"open-especie-menu\">${animal.especie}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Raça:</strong>\n                      <button class=\"detail-button\" id=\"open-raca-menu\">${animal.raça}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Gênero:</strong>\n                      <button class=\"detail-button\" id=\"open-genero-menu\">${animal.sexo}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Porte:</strong>\n                      <button class=\"detail-button\" id=\"open-porte-menu\">${animal.porte}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Cor:</strong>\n                      <button class=\"detail-button\" id=\"open-cor-menu\">${animal.cor}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Pelagem:</strong>\n                      <button class=\"detail-button\" id=\"open-pelagem-menu\">${animal.pelagem}</button>\n                  </div>\n                  <div class=\"detail-item\">\n                      <strong>Data de Nascimento:</strong>\n                      <button id=\"open-nascimento-menu\" class=\"detail-button\">${animal.nascimento ? animal.nascimento : 'Definir Data'}</button>\n                  </div>\n                  <div class=\"detail-item\"><strong>Faixa Etária:</strong> <span class=\"characteristic-box\">${animal.faixa_etaria}</span></div>\n                  <div class=\"detail-item\"><strong>Idade:</strong> <span class=\"characteristic-box\">${ageString}</span></div>\n                  <div class=\"detail-item\"><strong>Peso:</strong> <span class=\"characteristic-box\">${formatValue(animal.peso)} kg</span></div>\n                  <div class=\"detail-item\"><strong>Altura:</strong> <span class=\"characteristic-box\">${formatValue(animal.altura)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Comprimento:</strong> <span class=\"characteristic-box\">${formatValue(animal.comprimento)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Tórax:</strong> <span class=\"characteristic-box\">${formatValue(animal.torax)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Pescoço:</strong> <span class=\"characteristic-box\">${formatValue(animal.pescoço)} cm</span></div>\n                  <div class=\"detail-item\"><strong>Castrado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.castrado)}</span></div>\n                  <div class=\"detail-item\"><strong>Vacinado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.vacinado)}</span></div>\n                  <div class=\"detail-item\"><strong>Vermifugado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.vermifugado)}</span></div>\n                  <div class=\"detail-item\"><strong>Desparasitado:</strong> <span class=\"characteristic-box\">${formatBoolean(animal.desparasitado)}</span></div>\n              </div>\n            </div>\n        </div>\n\n        <div class=\"tab-container\">\n            <div class=\"tab-nav\">\n                <button class=\"tab-btn active\" data-tab=\"resumo\">Resumo</button>\n                <button class=\"tab-btn\" data-tab=\"eventos\">Histórico</button>\n                <button class=\"tab-btn\" data-tab=\"avaliacoes\">Avaliação</button>\n                <button class=\"tab-btn\" data-tab=\"pesagens\">Pesagem</button>\n                <button class=\"tab-btn\" data-tab=\"imunizacoes\">Imunização</button>\n                <button class=\"tab-btn\" data-tab=\"tratamentos\">Tratamento</button>\n                <button class=\"tab-btn\" data-tab=\"arquivos\">Arquivos</button>\n            </div>\n\n            <div class=\"tab-content-area\">\n                <div id=\"tab-resumo\" class=\"tab-content active\">\n                    <p>Aqui você poderá ver um resumo do histórico do animal.</p>\n                </div>\n                <div id=\"tab-eventos\" class=\"tab-content\"></div>\n                <div id=\"tab-avaliacoes\" class=\"tab-content\"></div>\n                <div id=\"tab-pesagens\" class=\"tab-content\"></div>\n                <div id=\"tab-imunizacoes\" class=\"tab-content\"></div>\n                <div id=\"tab-tratamentos\" class=\"tab-content\"></div>\n                <div id=\"tab-arquivos\" class=\"tab-content\"></div>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"overlay\" class=\"overlay\"></div>\n    <div id=\"pop-up-menu\" class=\"pop-up-menu\">\n        <span class=\"pop-up-close\" onclick=\"closeMenu()\">&times;</span>\n        <h2>Selecione a Espécie</h2>\n        <div id=\"pop-up-options-container\" class=\"pop-up-options-container\">\n        </div>\n    </div>\n\n    <div id=\"pop-up-nascimento\" class=\"pop-up small-pop-up\">\n        <h2>Alterar Data de Nascimento</h2>\n        <div class=\"pop-up-content\">\n            <input type=\"date\" id=\"nascimento-input\" class=\"date-input\" />\n        </div>\n        <div class=\"pop-up-actions\">\n            <button id=\"confirm-nascimento\" class=\"popup-button\">Salvar</button>\n            <button id=\"cancel-nascimento\" class=\"popup-button\">Cancelar</button>\n        </div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns\"></script>\n    <script>\n        const cachedData = {};\n\n        async function fetchTabData(tabId) {\n            if (cachedData[tabId]) {\n                return;\n            }\n\n            const tabContentElement = document.getElementById('tab-' + tabId);\n            tabContentElement.innerHTML = '<div class=\"loading-message\">Carregando...</div>';\n\n            try {\n                const payload = {\n                    tab_name: tabId,\n                    animal_id: '${animal.animal_id}'\n                };\n\n                const response = await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu-animal-dados\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(payload)\n                });\n                \n                if (!response.ok) {\n                    throw new Error('Erro na resposta da rede: ' + response.statusText);\n                }\n\n                const data = await response.json();\n                \n                // Trata a resposta do endpoint que agora retorna JSON com 'items' ou 'error'\n                if (data.error) {\n                    tabContentElement.innerHTML = '<div class=\"no-data-message\">' + data.error + '</div>';\n                } else if (data.items) {\n                    // Mapeamento de chaves para títulos de coluna amigáveis\n                    const columnMappings = {\n                        'eventos': {\n                            'data': 'Data', 'tipo': 'Tipo', 'descricao': 'Descrição', 'veterinario_nome': 'Veterinário'\n                        },\n                        'pesagens': {\n                            'data': 'Data', 'peso': 'Medição', 'variacao': 'Variação'\n                        },\n                        'avaliacoes': {\n                            'data': 'Data', 'observacao': 'Observação', 'veterinario_nome': 'Veterinário', 'temperatura': 'Temp.', 'score': 'Score', 'peso': 'Peso', 'nota': 'Nota'\n                        },\n                        'imunizacoes': {\n                            'data_exibicao': 'Data', 'tipo': 'Tipo', 'nome_imunizante': 'Imunizante', 'veterinario_nome': 'Veterinário', 'aplicada': 'Aplicada'\n                        },\n                        'tratamentos': {\n                            'data': 'Data', 'veterinario_nome': 'Veterinário', 'medicamentos': 'Medicamentos', 'finalizada': 'Finalizado'\n                        },\n                        'arquivos': {\n                            'data': 'Data', 'nome': 'Nome', 'observacao': 'Observação', 'url': 'Visualizar'\n                        }\n                    };\n\n                    const excludedKeys = ['id', 'animal_id', 'veterinario_id', 'concluido', 'programado', 'atrasado'];\n\n                    // Função para renderizar a tabela\n                    const renderTable = (items, tabId) => {\n                        const currentMapping = columnMappings[tabId] || {};\n                        const headers = Object.keys(items[0]).filter(key => !excludedKeys.includes(key));\n                        \n                        let tableHTML = '<table class=\"tab-table\"><thead><tr>';\n                        \n                        headers.forEach(header => {\n                            const title = currentMapping[header] || header.charAt(0).toUpperCase() + header.slice(1);\n                            tableHTML += '<th>' + title + '</th>';\n                        });\n                        \n                        tableHTML += '</tr></thead><tbody>';\n\n                        items.forEach(item => {\n                            tableHTML += '<tr>';\n                            headers.forEach(header => {\n                                let formattedContent = '';\n                                const cellContent = item[header];\n                                console.log(cellContent);\n\n                                if (['data', 'data_exibicao'].includes(header) && cellContent) {\n                                    const [year, month, day] = cellContent.split('-');\n                                    formattedContent = day+'/'+month+'/'+year;\n                                } else if (header === 'peso' && cellContent !== null) {\n                                    formattedContent = cellContent+' kg';\n                                } else if (header === 'medicamentos' && Array.isArray(cellContent)) {\n                                    formattedContent = '<ul>'+cellContent.map(med => '<li>'+med+'</li>').join('')+'</ul>';\n                                } else if (header === 'url' && cellContent) {\n                                    formattedContent = '<a href=\"'+cellContent+'\" target=\"_blank\">Visualizar</a>';\n                                } else if (typeof cellContent === 'boolean') {\n                                    formattedContent = cellContent ? 'Sim' : 'Não';\n                                } else {\n                                    formattedContent = cellContent || '';\n                                }\n                                tableHTML += '<td>'+formattedContent+'</td>';\n                            });\n                            tableHTML += '</tr>';\n                        });\n\n                        tableHTML += '</tbody></table>';\n                        return tableHTML;\n                    };\n                    \n                    tabContentElement.innerHTML = renderTable(data.items, tabId);\n\n                    // Se for a guia de pesagens, renderiza o gráfico\n                    if (tabId === 'pesagens' && data.chartData) {\n                        tabContentElement.innerHTML += '<div class=\"chart-container\"><canvas id=\"weightChart\"></canvas></div>';\n                        renderChart(data.chartData);\n                    }\n                    \n                    cachedData[tabId] = true;\n                }\n\n            } catch (error) {\n                console.error('Erro ao buscar dados da guia:', error);\n                tabContentElement.innerHTML = '<div class=\"error-message\">Ocorreu um erro ao carregar os dados.</div>';\n            }\n        }\n\nfunction renderChart(chartData) {\n    // Converte dados do backend em pontos {x,y}\n    const dataPoints = chartData.map(item => ({\n        x: new Date(item.data),\n        y: item.peso\n    }));\n\n    const maxWeight = Math.max(...dataPoints.map(p => p.y));\n    const maxYValue = Math.ceil(maxWeight / 10) * 10;\n\n    const ctx = document.getElementById('weightChart').getContext('2d');\n\n    // pega primeira e última data reais do dataset\n    const dates = chartData.map(item => new Date(item.data));\n    const minDate = new Date(Math.min(...dates));\n    const today = new Date();\n\n    // adiciona margem de 15 dias antes da primeira data\n    const paddedMinDate = new Date(minDate);\n    paddedMinDate.setDate(minDate.getDate() - 15);\n\n    new Chart(ctx, {\n        type: 'line',\n        data: {\n            datasets: [{\n                label: 'Peso',\n                data: dataPoints, // só pontos reais\n                borderColor: '#4A90E2',\n                backgroundColor: 'rgba(74, 144, 226, 0.2)',\n                fill: true,\n                tension: 0.3,\n                pointRadius: 3\n            }]\n        },\n        options: {\n            responsive: true,\n            scales: {\n                x: {\n                    type: 'time',\n                    time: {\n                        unit: 'year',\n                    },\n                    ticks: {\n                        callback: function(value) {\n                            const date = new Date(value);\n                            return (date.getMonth() === 0 && date.getDate() === 1)\n                                ? date.getFullYear()\n                                : '';\n                        },\n                        autoSkip: true,\n                        maxRotation: 0,\n                        minRotation: 0\n                    },\n                    min: paddedMinDate, // com espaço antes do primeiro ponto\n                    max: today,         // estende até hoje, mas sem ponto falso\n                    grid: {\n                        drawTicks: true\n                    }\n                },\n                y: {\n                    beginAtZero: true,\n                    suggestedMax: maxYValue\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                }\n            }\n        }\n    });\n\n            \n        }\n\n\n        // Funções para inicializar o sistema de guias, pop-ups e outras funcionalidades\n        function initTabs() {\n            const tabButtons = document.querySelectorAll('.tab-btn');\n            const tabContents = document.querySelectorAll('.tab-content');\n        \n            tabButtons.forEach(button => {\n                button.addEventListener('click', () => {\n                    const tabId = button.getAttribute('data-tab');\n        \n                    tabButtons.forEach(btn => btn.classList.remove('active'));\n                    tabContents.forEach(content => content.classList.remove('active'));\n        \n                    button.classList.add('active');\n                    document.getElementById('tab-' + tabId).classList.add('active');\n        \n                    if (tabId !== 'resumo') {\n                        fetchTabData(tabId);\n                    }\n                });\n            });\n        }\n\n        //const especies = '+${especies};\n        //const racas = '+${racas};\n        //const generos = '+${generos};\n        //const portes = '+${portes};\n        //const cores = '+${cores};\n        //const pelagens = '+${pelagens};\n        \n        let currentButton = null;\n        let currentType = null;\n        \n        function openMenu(data, button, type, labelKey) {\n            currentButton = button;\n            currentType = type;\n        \n            const menu = document.getElementById('pop-up-menu');\n            const overlay = document.getElementById('overlay');\n            const optionsContainer = document.getElementById('pop-up-options-container');\n        \n            menu.querySelector('h2').textContent = \"Selecione \" + type.charAt(0).toUpperCase() + type.slice(1);\n        \n            optionsContainer.innerHTML = '';\n            data.forEach(item => {\n                const option = document.createElement('div');\n                option.classList.add('pop-up-option');\n                option.textContent = item[labelKey];\n                option.setAttribute('data-id', item.id);\n        \n                option.onclick = () => selectOption(animal.animal_id, item.id, item[labelKey]);\n                optionsContainer.appendChild(option);\n            });\n        \n            overlay.style.display = 'block';\n            menu.style.display = 'flex';\n        }\n        \n        function closeMenu() {\n            document.getElementById('overlay').style.display = 'none';\n            document.getElementById('pop-up-menu').style.display = 'none';\n        }\n        \n        function selectOption(idAnimal, valueId, valueText) {\n            console.log('selectOption:' + valueId + ' - ' + valueText);\n            if (currentButton && currentType) {\n                updateCharacteristic(idAnimal, currentType, valueId, valueText);\n            }\n            closeMenu();\n        }\n        \n        async function updateCharacteristic(animalId, type, valueId, valueText) {\n            try {\n                let payload = { \n                    animal_id: animalId, \n                    caracteristica: type, \n                    caracteristica_id: valueId, \n                    caracteristica_label: valueText \n                };\n                await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n        \n                currentButton.textContent = valueText;\n                console.log('atualizado com sucesso!');\n            } catch (error) {\n                console.error('Erro ao atualizar ' + type + ':', error);\n            }\n        }\n\n        function initDatePopup() {\n            const nascimentoButton = document.getElementById(\"open-nascimento-menu\");\n            const nascimentoPopup = document.getElementById(\"pop-up-nascimento\");\n            const nascimentoInput = document.getElementById(\"nascimento-input\");\n            const confirmNascimento = document.getElementById(\"confirm-nascimento\");\n            const cancelNascimento = document.getElementById(\"cancel-nascimento\");\n            const overlay = document.getElementById(\"overlay\");\n        \n            nascimentoButton.onclick = function () {\n                if (nascimentoButton.textContent !== \"Definir Data\") {\n                    nascimentoInput.value = nascimentoButton.textContent;\n                } else {\n                    nascimentoInput.value = \"\";\n                }\n                overlay.style.display = \"block\";\n                nascimentoPopup.style.display = \"flex\";\n            };\n        \n            function closeNascimentoPopup() {\n                overlay.style.display = \"none\";\n                nascimentoPopup.style.display = \"none\";\n            }\n        \n            cancelNascimento.onclick = closeNascimentoPopup;\n        \n            confirmNascimento.onclick = async function () {\n                const novaData = nascimentoInput.value;\n                if (!novaData) {\n                    // Substituindo alert por uma mensagem mais elegante, já que alert não funciona em iframes\n                    document.getElementById('pop-up-nascimento').querySelector('.pop-up-nascimento-actions').insertAdjacentHTML('beforebegin', '<p style=\"color:red; text-align:center;\">Selecione uma data válida.</p>');\n                    return;\n                }\n        \n                try {\n                    await fetch(\"https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu_animal_update\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({\n                            animal_id: \"animal.animal_id\",\n                            caracteristica: \"nascimento\",\n                            data_nascimento: novaData\n                        })\n                    });\n        \n                    nascimentoButton.textContent = novaData;\n                    console.log(\"Data de nascimento atualizada com sucesso!\");\n                } catch (error) {\n                    console.error(\"Erro ao atualizar data de nascimento:\", error);\n                }\n        \n                closeNascimentoPopup();\n            };\n        \n            document.addEventListener(\"keydown\", function (event) {\n                if (event.key === \"Escape\" || event.key === \"Esc\") {\n                    closeMenu();\n                    closeNascimentoPopup();\n                }\n            });\n        }\n\n        document.addEventListener('DOMContentLoaded', function() {\n            initTabs();\n            initDatePopup();\n\n            document.getElementById('open-especie-menu').onclick = () =>\n                openMenu(especies, document.getElementById('open-especie-menu'), 'especie', 'especie');\n        \n            document.getElementById('open-raca-menu').onclick = () =>\n                openMenu(racas, document.getElementById('open-raca-menu'), 'raca', 'raca');\n        \n            document.getElementById('open-genero-menu').onclick = () =>\n                openMenu(generos, document.getElementById('open-genero-menu'), 'genero', 'genero');\n        \n            document.getElementById('open-porte-menu').onclick = () =>\n                openMenu(portes, document.getElementById('open-porte-menu'), 'porte', 'porte');\n        \n            document.getElementById('open-cor-menu').onclick = () =>\n                openMenu(cores, document.getElementById('open-cor-menu'), 'cor', 'cor');\n        \n            document.getElementById('open-pelagem-menu').onclick = () =>\n                openMenu(pelagens, document.getElementById('open-pelagem-menu'), 'pelagem', 'pelagem');\n\n            // Carrega a guia de resumo por padrão\n            document.querySelector('[data-tab=\"resumo\"]').click();\n        });\n    </script>\n\n</body>\n</html>\n`;\n\nreturn [{ json: { html: html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1152,
        -240
      ],
      "id": "6f039f43-d8b3-4c3f-afe3-47a58185e3b8",
      "name": "Details Page1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eebc52eb-77b5-4a72-963c-06cf84c9f1a3",
              "name": "style",
              "value": "=<style>\n    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n    \n    @font-face {\n        font-family: 'GoodDog';\n        src: url('https://raw.githubusercontent.com/viralatinhaz/kaniu/main/GoodDog.TTF') format('truetype');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    :root {\n        --primary-color: #FF6600;\n        --secondary-color: #5A5D7F;\n        --background-light: #F4F6F9;\n        --card-background: #FFFFFF;\n        --text-dark: #333333;\n        --text-light: #666666;\n        --text-faded: #999999;\n        --border-color: #E0E0E0;\n    }\n    \n    body {\n        font-family: 'Poppins', sans-serif;\n        margin: 0;\n        padding: 0;\n        height: 100vh;\n        width: 100vw;\n        display: flex;\n        flex-direction: column;\n        background-color: var(--background-light);\n        color: var(--text-dark);\n        box-sizing: border-box;\n        overflow: hidden;\n    }\n    \n    .header {\n        width: 100%;\n        padding: 10px 20px;\n        background-color: var(--card-background);\n        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);\n        display: flex;\n        align-items: center;\n        box-sizing: border-box;\n        flex-shrink: 0;\n    }\n    \n    .header-content {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        margin-left: 20px;\n    }\n    \n    .header-logo {\n        width: 40px;\n        height: 40px;\n    }\n    \n    .header-title {\n        font-family: 'GoodDog', sans-serif;\n        font-size: 1.8rem;\n        color: var(--primary-color);\n        margin: 0;\n    }\n    \n    .main-content {\n        flex: 1;\n        display: flex;\n        flex-direction: row;\n        gap: 10px;\n        padding: 10px;\n        box-sizing: border-box;\n        height: calc(100% - 60px);\n    }\n    \n    .animal-details-frame {\n        background-color: var(--card-background);\n        border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);\n        width: 400px;\n        display: flex;\n        flex-direction: column;\n        flex-shrink: 0;\n        height: 100%;\n        overflow: hidden;\n        position: relative;\n    }\n    \n    .content-wrapper {\n        display: flex;\n        flex-direction: row;\n        align-items: flex-start;\n        gap: 10px;\n        padding: 20px;\n        flex-shrink: 0;\n        position: relative;\n    }\n    \n    .animal-photo-container {\n        width: 100px;\n        height: 100px;\n        flex-shrink: 0;\n        border-radius: 15px;\n        overflow: hidden;\n        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n    }\n    \n    .animal-photo {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n    \n    .text-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: flex-start;\n        flex: 1;\n        height: 100px;\n    }\n    \n    .animal-header h1 {\n        font-family: 'GoodDog', sans-serif;\n        font-size: 2rem;\n        font-weight: 600;\n        color: var(--secondary-color);\n        margin: 0;\n        text-align: left;\n    }\n    \n    .details-container {\n        overflow-y: auto;\n        flex: 1;\n        padding: 0 10px 10px 10px;\n        scrollbar-width: regular;\n        scrollbar-color: var(--secondary-color) var(--background-light);\n    }\n    \n    .details-container::-webkit-scrollbar {\n        width: 14px;\n    }\n    \n    .details-container::-webkit-scrollbar-track {\n        background: var(--background-light);\n        border-radius: 10px;\n    }\n    \n    .details-container::-webkit-scrollbar-thumb {\n        background-color: var(--secondary-color);\n        border-radius: 10px;\n        border: 4px solid var(--background-light);\n        background-clip: padding-box;\n    }\n    \n    .details-grid {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n        width: 100%;\n        text-align: left;\n    }\n    \n    /* Itens de detalhe em estilo de tabela */\n    .detail-item {\n        background-color: transparent; /* remove o fundo cinza */\n        padding: 12px 15px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        border-bottom: 1px solid var(--border-color); /* linhas finas iguais à tabela */\n        border-radius: 0; /* remove arredondamento */\n    }\n    \n    .detail-item strong {\n        font-size: 0.85rem;\n        color: var(--text-dark);\n    }\n    \n    /* Ajuste para os valores em \"caixinhas\" (characteristic-box) ficarem alinhados */\n    .characteristic-box {\n        background-color: transparent;\n        color: var(--text-light);\n        font-size: 0.8rem;\n        font-weight: 500;\n    }\n    \n    .back-button {\n        position: absolute;\n        top: 15px;\n        right: 15px;\n        background-color: var(--background-light);\n        border: none;\n        color: var(--text-light);\n        padding: 5px 12px;\n        border-radius: 6px;\n        text-decoration: none;\n        font-size: 0.8rem;\n        transition: all 0.2s ease;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n        font-weight: 500;\n        z-index: 10;\n    }\n    \n    .back-button:hover {\n        background-color: var(--primary-color);\n        color: var(--card-background);\n    }\n    \n    /* Botão com fundo cinza claro */\n    .detail-button {\n        display: inline-block;\n        background-color: var(--background-light); /* agora fundo cinza claro */\n        border: none;\n        color: var(--secondary-color);\n        padding: 5px 12px;\n        border-radius: 6px;\n        text-decoration: none;\n        font-size: 0.8rem;\n        transition: all 0.2s ease;\n        box-shadow: none; /* remove sombra para ficar minimalista */\n        font-weight: 500;\n        text-align: center;\n        white-space: nowrap;\n        cursor: pointer;\n    }\n    \n    .detail-button:hover {\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n    }\n\n    .button-container {\n        display: flex;\n        gap: 5px;\n        flex-shrink: 0;\n    }\n\n    .img-button-wrapper {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 32px;\n        height: 32px;\n        border-radius: 8px;\n        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n        transition: all 0.2s ease;\n        cursor: default;\n    }\n\n    .img-button {\n        width: 24px;\n        height: 24px;\n        object-fit: contain;\n    }\n\n    .img-button-wrapper .tooltip {\n        visibility: hidden;\n        width: max-content;\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n        text-align: center;\n        border-radius: 6px;\n        padding: 5px 10px;\n        position: absolute;\n        z-index: 1;\n        bottom: 150%;\n        left: 50%;\n        transform: translateX(-50%);\n        opacity: 0;\n        transition: opacity 0.3s;\n        font-size: 0.75rem;\n        white-space: nowrap;\n    }\n\n    .img-button-wrapper .tooltip::after {\n        content: \"\";\n        position: absolute;\n        top: 100%;\n        left: 50%;\n        margin-left: -5px;\n        border-width: 5px;\n        border-style: solid;\n        border-color: var(--secondary-color) transparent transparent transparent;\n    }\n\n    .img-button-wrapper:hover .tooltip {\n        visibility: visible;\n        opacity: 1;\n    }\n\n    .overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n        backdrop-filter: blur(5px);\n        z-index: 20;\n        display: none;\n    }\n    \n    .pop-up-menu {\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background-color: var(--card-background);\n        border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n        padding: 15px;\n        z-index: 30;\n        display: none;\n        flex-direction: column;\n        gap: 10px; \n        max-height: 80vh;\n        overflow-y: auto;\n        width: 300px;\n    }\n    \n    .pop-up-menu h2 {\n        margin: 0 0 5px 0;\n        font-size: 1rem;\n        color: var(--secondary-color);\n        text-align: center;\n    }\n    \n    .pop-up-options-container {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n    }\n    \n    .pop-up-option {\n        padding: 8px 12px;\n        background-color: var(--background-light);\n        border-radius: 6px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-weight: 500;\n        font-size: 0.8rem;\n    }\n    \n    .pop-up-option:hover {\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n    }\n    \n    .pop-up-option.selected {\n        background-color: var(--secondary-color);\n        color: var(--card-background);\n    }\n    \n    .pop-up-close {\n        position: absolute;\n        top: 5px;\n        right: 10px;\n        font-size: 1.2rem;\n        cursor: pointer;\n        color: var(--text-faded);\n    }\n    \n    .date-input {\n      padding: 10px 15px;\n      border-radius: 6px;\n      border: 1px solid #ccc;\n      width: 100%;\n      box-sizing: border-box;\n      font-size: 14px;\n    }\n    \n    .pop-up-actions {\n      display: flex;\n      justify-content: center;\n      gap: 15px;\n      margin-top: 10px;\n      flex-wrap: wrap;\n    }\n    \n    .confirm-button,\n    .cancel-button {\n      padding: 10px 20px;\n      border-radius: 6px;\n      border: none;\n      cursor: pointer;\n      flex: 1;\n      max-width: 120px;\n    }\n    \n    .confirm-button {\n      background-color: #4CAF50;\n      color: #fff;\n    }\n    \n    .cancel-button {\n      background-color: #ccc;\n    }\n\n    .small-pop-up {\n      min-height: auto;\n      padding: 16px;\n      gap: 12px;\n      flex-direction: column;\n      justify-content: flex-start;\n    }\n\n    .small-pop-up h2 {\n      font-size: 16px;\n      margin-bottom: 12px;\n    }\n\n    .pop-up-content {\n      margin-bottom: 16px;\n    }\n\n    .popup-button {\n      background-color: #f0f0f0;\n      border: 1px solid #ccc;\n      border-radius: 8px;\n      padding: 6px 14px;\n      cursor: pointer;\n      font-size: 14px;\n      transition: background 0.2s;\n    }\n\n    .popup-button:hover {\n      background-color: #e0e0e0;\n    }\n\n    #pop-up-nascimento {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background-color: var(--card-background);\n      border-radius: 10px;\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n      padding: 15px;\n      z-index: 40;\n      display: none;\n      flex-direction: column;\n      gap: 10px;\n      width: 280px;\n    }\n\n    /* Sistema de Guias */\n    .tab-container {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        background-color: var(--background-light);\n        border-radius: 10px;\n        overflow: hidden;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);\n        flex: 1;\n    }\n\n    .tab-nav {\n        display: flex;\n        background-color: var(--background-light);\n        border-bottom: 2px solid var(--border-color);\n        padding: 0;\n        margin: 0;\n        flex-shrink: 0;\n        overflow-x: auto;\n        scrollbar-width: none;\n        -ms-overflow-style: none;\n    }\n\n    .tab-nav::-webkit-scrollbar {\n        display: none;\n    }\n\n    .tab-btn {\n        flex: 1;\n        min-width: 80px;\n        padding: 15px 20px;\n        background-color: transparent;\n        border: none;\n        border-bottom: 3px solid transparent;\n        color: var(--text-light);\n        font-size: 0.8rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        white-space: nowrap;\n        position: relative;\n        text-align: center;\n    }\n\n    .tab-btn:hover {\n        background-color: rgba(255, 255, 255, 0.5);\n        color: var(--secondary-color);\n    }\n\n    .tab-btn.active {\n        background-color: var(--card-background);\n        color: var(--secondary-color);\n        border-bottom-color: var(--primary-color);\n        font-weight: 600;\n    }\n\n    .tab-content-area {\n        flex: 1;\n        background-color: var(--card-background);\n        overflow: hidden;\n        position: relative;\n        font-size: 0.7rem;\n    }\n\n    .tab-content {\n        display: none;\n        height: 100%;\n        padding: 20px;\n        overflow-y: auto;\n        box-sizing: border-box;\n    }\n\n    .tab-content.active {\n        display: block;\n    }\n\n    .tab-content::-webkit-scrollbar {\n        width: 8px;\n    }\n\n    .tab-content::-webkit-scrollbar-track {\n        background: var(--background-light);\n        border-radius: 4px;\n    }\n\n    .tab-content::-webkit-scrollbar-thumb {\n        background-color: var(--text-faded);\n        border-radius: 4px;\n    }\n\n    .tab-content::-webkit-scrollbar-thumb:hover {\n        background-color: var(--secondary-color);\n    }\n\n    .tab-table {\n        width: 100%;\n        border-collapse: collapse;\n        font-size: 0.75rem;\n        margin-top: 10px;\n    }\n\n    .tab-table th,\n    .tab-table td {\n        padding: 12px 15px;\n        text-align: left;\n        border-bottom: 1px solid var(--border-color);\n    }\n\n    .tab-table th {\n        background-color: var(--background-light);\n        font-weight: 600;\n        color: var(--text-dark);\n        position: sticky;\n        top: 0;\n        z-index: 1;\n    }\n\n    .tab-table td {\n        color: var(--text-light);\n    }\n\n    .tab-table tbody tr:hover {\n        background-color: rgba(90, 93, 127, 0.03);\n    }\n\n    /* Estilos para o Timeline (Resumo) */\n    .timeline-container {\n        padding: 20px;\n    }\n\n    .timeline-header {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n        margin-bottom: 15px;\n        padding: 0 15px;\n    }\n\n    .timeline-column-title {\n        flex: 1;\n        font-weight: 600;\n        color: var(--secondary-color);\n        text-align: center;\n    }\n\n    .timeline-column-title.date-column {\n        min-width: 100px;\n        text-align: left;\n    }\n\n    .timeline-grid {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n\n    .timeline-item {\n        background-color: var(--background-light);\n        padding: 10px 15px;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        gap: 15px;\n    }\n\n    .timeline-item strong {\n        min-width: 100px;\n        color: var(--text-dark);\n        font-weight: 500;\n    }\n\n    .timeline-box {\n        flex: 1;\n        background-color: var(--card-background);\n        color: var(--text-light);\n        padding: 6px 10px;\n        border-radius: 6px;\n        font-weight: 500;\n        text-align: center;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    /* Estilos para o Resumo (mantidos para outras seções se necessário) */\n    .resume-sections {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 30px;\n        padding: 10px;\n    }\n\n    .resume-section {\n        margin-bottom: 0;\n    }\n\n    .resume-title {\n        color: var(--secondary-color);\n        font-weight: 600;\n        margin: 0 0 15px 0;\n        padding-bottom: 8px;\n        border-bottom: 2px solid var(--background-light);\n    }\n\n    .resume-list {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n\n    .resume-item {\n        background-color: var(--background-light);\n        padding: 10px 15px;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    .resume-item strong {\n        font-size: 0.85rem;\n        color: var(--text-dark);\n        font-weight: 500;\n    }\n\n    .resume-value {\n        background-color: var(--card-background);\n        color: var(--text-light);\n        padding: 4px 10px;\n        border-radius: 6px;\n        font-size: 0.8rem;\n        font-weight: 500;\n        white-space: nowrap;\n    }\n\n    .content-section {\n        margin-bottom: 20px;\n    }\n\n    .content-section h3 {\n        color: var(--secondary-color);\n        margin-bottom: 10px;\n    }\n\n    .content-section p {\n        color: var(--text-light);\n        line-height: 1.6;\n    }\n\n    @media (max-width: 768px) {\n        .timeline-header {\n            display: none; /* Oculta cabeçalho em telas pequenas */\n        }\n\n        .timeline-item {\n            flex-direction: column;\n            align-items: stretch;\n            gap: 8px;\n        }\n\n        .timeline-item strong {\n            min-width: auto;\n            text-align: center;\n            background-color: var(--secondary-color);\n            color: var(--card-background);\n            padding: 6px 10px;\n            border-radius: 6px;\n        }\n\n        .timeline-box {\n            text-align: left;\n        }\n\n        .resume-sections {\n            grid-template-columns: 1fr;\n            gap: 20px;\n        }\n        \n        .tab-btn {\n            min-width: 70px;\n            padding: 12px 15px;\n            font-size: 0.8rem;\n        }\n        \n        .tab-content {\n            padding: 15px;\n        }\n    }\n\n    @media (max-width: 480px) {\n        .main-content {\n            flex-direction: column;\n        }\n        .animal-details-frame {\n            width: 100%;\n            height: auto;\n        }\n        .content-wrapper {\n            height: auto;\n        }\n        .text-content {\n            height: auto;\n        }\n        .pop-up-menu {\n            width: 85%;\n        }\n        .tab-btn {\n            min-width: 60px;\n            padding: 10px 12px;\n            font-size: 0.75rem;\n        }\n        .tab-content {\n            padding: 10px;\n        }\n    }\n\n.chart-container {\n    position: relative;\n    width: 100%;\n    max-height: 500px;\n    margin-top: 2rem;\n    \n    /* Adicione estas linhas */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n</style>\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1344,
        -240
      ],
      "id": "700a8988-27c0-4f1f-aec1-6ef888c2f73c",
      "name": "Estilo1"
    }
  ],
  "pinData": {
    "Kaniu": [
      {
        "json": {
          "headers": {
            "host": "karah-n8n.uzd6db.easypanel.host",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36 Edg/140.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "accept-encoding": "gzip, deflate, br",
            "accept-language": "pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6",
            "cache-control": "max-age=0",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2BadDinmef4UaQcKk5H1L8UIQ72WGUya5w%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2B806YpW%2BVvwO3NByDJKOsX9pKcSDU2G78%3D; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX19qfDNnrp9HE2qJdYbizGSCPjViV%2BVpanfJ7ExeeTgKGO3LrNjJwNjtzNG%2BSvcYCq%2FDaCGljLV%2BPw%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX19sYABqT2rE%2FZ6iczu4zKSjjD5rxDxUpCgHh1WDsmLlYbEI3LroBgMWN%2B8Y5H%2F2aOSppwDbTQ7KAYX7GRUthTiABoLBG4s%2B5N5P3IwpWvrOWVh%2BQZ6woEaaJM9ftqR1Qz1t9TIpMmBBUuekU7jM1oK%2B8qabA1WTUCY%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX19t5zODa%2BTVnEy7qUQK1EV5UHUXvnpCf6kl269RzkmP1LZzXRvzLpoNrogKBzwtPNiZrBL59Vuy2cTWJuuWvbeUa%2B90lVR47Xc%2BTF8FQbJ%2F6UIsekxIIG1tlAM3czBMdlILl6l0F39XJw%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22c241ff24a9ad53940b8c3b07f3121394f2a5667daf04331aaa56a13d92e8e026%2336e98418-cb69-4c27-b2c6-02d98ffe06fd%22%2C%22%24sesid%22%3A%5B1758590644800%2C%220199741f-1ea2-7aa8-97c3-596944423894%22%2C1758589820577%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fkarah-n8n.uzd6db.easypanel.host%2Fsignin%3Fredirect%3D%25252Fprojects%25252FmEBLDicwiND3aElR%25252Fworkflows%22%7D%7D; rl_session=RudderEncrypt%3AU2FsdGVkX19cN2D6xr1nu0jlma34cXfI8QsqOfSPlVEx1CHqN1xGd9wCvPDNi8HgR6pQwmnP23ayVnpYVS8lOcR9SDsNUn6sEt5ncOrf%2FOOV4kkLSuxYVTldmPltp8UDrZm2ORZ9pB4o%2B2T0GmSuCA%3D%3D",
            "if-none-match": "W/\"b97a-8ywk5JxYnU/eHd5JI2xrcqh7xks\"",
            "referer": "https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu?status=Abrigado",
            "sec-ch-ua": "\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Microsoft Edge\";v=\"140\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "document",
            "sec-fetch-mode": "navigate",
            "sec-fetch-site": "same-origin",
            "sec-fetch-user": "?1",
            "upgrade-insecure-requests": "1",
            "x-forwarded-for": "164.85.104.33, 163.116.233.34",
            "x-forwarded-host": "karah-n8n.uzd6db.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "9a520392bf62",
            "x-real-ip": "163.116.233.34"
          },
          "params": {},
          "query": {
            "animal_id": "2799af43-94e7-4cf1-8e2c-00e2ec22601a"
          },
          "body": {},
          "webhookUrl": "https://karah-n8n.uzd6db.easypanel.host/webhook/kaniu",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Kaniu": {
      "main": [
        [
          {
            "node": "List Animals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Animals": {
      "main": [
        [
          {
            "node": "Empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Animals": {
      "main": [
        [
          {
            "node": "Animal Statuses",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Tables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Details": {
      "main": [
        [
          {
            "node": "Estilo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Combine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Empty": {
      "main": [
        [
          {
            "node": "Animals List Page",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine": {
      "main": [
        [
          {
            "node": "Animals List Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Animals List Page": {
      "main": [
        [
          {
            "node": "Respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Animal Statuses": {
      "main": [
        [
          {
            "node": "Get Animals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tables": {
      "main": [
        [
          {
            "node": "Get Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Details Page": {
      "main": [
        [
          {
            "node": "Respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Estilo": {
      "main": [
        [
          {
            "node": "Details Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f060ef43-d0da-4a3d-86bf-87ec7b892fbb",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c241ff24a9ad53940b8c3b07f3121394f2a5667daf04331aaa56a13d92e8e026"
  },
  "id": "a3j0ksUILKOIZs26",
  "tags": []
}